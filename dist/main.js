(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
(function (global){
"use strict";!function t(e,r,n){function o(s,c){if(!r[s]){if(!e[s]){var u="function"==typeof require&&require;if(!c&&u)return u(s,!0);if(i)return i(s,!0);var a=new Error("Cannot find module '"+s+"'");throw a.code="MODULE_NOT_FOUND",a}var f=r[s]={exports:{}};e[s][0].call(f.exports,function(t){var r=e[s][1][t];return o(r?r:t)},f,f.exports,t,e,r,n)}return r[s].exports}for(var i="function"==typeof require&&require,s=0;s<n.length;s++)o(n[s]);return o}({1:[function(t,e,r){(function(e){if(e._babelPolyfill)throw new Error("only one instance of babel/polyfill is allowed");e._babelPolyfill=!0,t("core-js/shim"),t("regenerator/runtime")}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"core-js/shim":72,"regenerator/runtime":73}],2:[function(t,e,r){var n=t("./$");e.exports=function(t){return function(e){var r,o=n.toObject(this),i=n.toLength(o.length),s=n.toIndex(arguments[1],i);if(t&&e!=e){for(;i>s;)if(r=o[s++],r!=r)return!0}else for(;i>s;s++)if((t||s in o)&&o[s]===e)return t||s;return!t&&-1}}},{"./$":16}],3:[function(t,e,r){var n=t("./$"),o=t("./$.ctx");e.exports=function(t){var e=1==t,r=2==t,i=3==t,s=4==t,c=6==t,u=5==t||c;return function(a){for(var f,l,d=Object(n.assertDefined(this)),p=n.ES5Object(d),h=o(a,arguments[1],3),g=n.toLength(p.length),$=0,v=e?Array(g):r?[]:void 0;g>$;$++)if((u||$ in p)&&(f=p[$],l=h(f,$,d),t))if(e)v[$]=l;else if(l)switch(t){case 3:return!0;case 5:return f;case 6:return $;case 2:v.push(f)}else if(s)return!1;return c?-1:i||s?s:v}}},{"./$":16,"./$.ctx":10}],4:[function(t,e,r){function n(t,e,r){if(!t)throw TypeError(r?e+r:e)}var o=t("./$");n.def=o.assertDefined,n.fn=function(t){if(!o.isFunction(t))throw TypeError(t+" is not a function!");return t},n.obj=function(t){if(!o.isObject(t))throw TypeError(t+" is not an object!");return t},n.inst=function(t,e,r){if(!(t instanceof e))throw TypeError(r+": use the 'new' operator!");return t},e.exports=n},{"./$":16}],5:[function(t,e,r){var n=t("./$");e.exports=Object.assign||function(t,e){for(var r=Object(n.assertDefined(t)),o=arguments.length,i=1;o>i;)for(var s,c=n.ES5Object(arguments[i++]),u=n.getKeys(c),a=u.length,f=0;a>f;)r[s=u[f++]]=c[s];return r}},{"./$":16}],6:[function(t,e,r){function n(t){return s.call(t).slice(8,-1)}var o=t("./$"),i=t("./$.wks")("toStringTag"),s={}.toString;n.classof=function(t){var e,r;return void 0==t?void 0===t?"Undefined":"Null":"string"==typeof(r=(e=Object(t))[i])?r:n(e)},n.set=function(t,e,r){t&&!o.has(t=r?t:t.prototype,i)&&o.hide(t,i,e)},e.exports=n},{"./$":16,"./$.wks":27}],7:[function(t,e,r){function n(t,e){if(!d(t))return("string"==typeof t?"S":"P")+t;if(g(t))return"F";if(!f(t,$)){if(!e)return"E";p(t,$,++j)}return"O"+t[$]}function o(t,e){var r,o=n(e);if("F"!=o)return t[v][o];for(r=t[m];r;r=r.n)if(r.k==e)return r}var i=t("./$"),s=t("./$.ctx"),c=t("./$.uid").safe,u=t("./$.assert"),a=t("./$.iter"),f=i.has,l=i.set,d=i.isObject,p=i.hide,h=a.step,g=Object.isFrozen||i.core.Object.isFrozen,$=c("id"),v=c("O1"),y=c("last"),m=c("first"),b=c("iter"),w=i.DESC?c("size"):"size",j=0;e.exports={getConstructor:function(t,e,r){function n(o){var s=u.inst(this,n,t);l(s,v,i.create(null)),l(s,w,0),l(s,y,void 0),l(s,m,void 0),void 0!=o&&a.forOf(o,e,s[r],s)}return i.mix(n.prototype,{clear:function(){for(var t=this,e=t[v],r=t[m];r;r=r.n)r.r=!0,r.p&&(r.p=r.p.n=void 0),delete e[r.i];t[m]=t[y]=void 0,t[w]=0},"delete":function(t){var e=this,r=o(e,t);if(r){var n=r.n,i=r.p;delete e[v][r.i],r.r=!0,i&&(i.n=n),n&&(n.p=i),e[m]==r&&(e[m]=n),e[y]==r&&(e[y]=i),e[w]--}return!!r},forEach:function(t){for(var e,r=s(t,arguments[1],3);e=e?e.n:this[m];)for(r(e.v,e.k,this);e&&e.r;)e=e.p},has:function(t){return!!o(this,t)}}),i.DESC&&i.setDesc(n.prototype,"size",{get:function(){return u.def(this[w])}}),n},def:function(t,e,r){var i,s,c=o(t,e);return c?c.v=r:(t[y]=c={i:s=n(e,!0),k:e,v:r,p:i=t[y],n:void 0,r:!1},t[m]||(t[m]=c),i&&(i.n=c),t[w]++,"F"!=s&&(t[v][s]=c)),t},getEntry:o,getIterConstructor:function(){return function(t,e){l(this,b,{o:t,k:e})}},next:function(){for(var t=this[b],e=t.k,r=t.l;r&&r.r;)r=r.p;return t.o&&(t.l=r=r?r.n:t.o[m])?"key"==e?h(0,r.k):"value"==e?h(0,r.v):h(0,[r.k,r.v]):(t.o=void 0,h(1))}}},{"./$":16,"./$.assert":4,"./$.ctx":10,"./$.iter":15,"./$.uid":25}],8:[function(t,e,r){function n(t,e){return y.call(t.array,function(t){return t[0]===e})}function o(t){return t[$]||l(t,$,{array:[],get:function(t){var e=n(this,t);return e?e[1]:void 0},has:function(t){return!!n(this,t)},set:function(t,e){var r=n(this,t);r?r[1]=e:this.array.push([t,e])},"delete":function(t){var e=m.call(this.array,function(e){return e[0]===t});return~e&&this.array.splice(e,1),!!~e}})[$]}var i=t("./$"),s=t("./$.uid").safe,c=t("./$.assert"),u=t("./$.iter").forOf,a=i.has,f=i.isObject,l=i.hide,d=Object.isFrozen||i.core.Object.isFrozen,p=0,h=s("id"),g=s("weak"),$=s("leak"),v=t("./$.array-methods"),y=v(5),m=v(6);e.exports={getConstructor:function(t,e,r){function n(o){i.set(c.inst(this,n,t),h,p++),void 0!=o&&u(o,e,this[r],this)}return i.mix(n.prototype,{"delete":function(t){return f(t)?d(t)?o(this)["delete"](t):a(t,g)&&a(t[g],this[h])&&delete t[g][this[h]]:!1},has:function(t){return f(t)?d(t)?o(this).has(t):a(t,g)&&a(t[g],this[h]):!1}}),n},def:function(t,e,r){return d(c.obj(e))?o(t).set(e,r):(a(e,g)||l(e,g,{}),e[g][t[h]]=r),t},leakStore:o,WEAK:g,ID:h}},{"./$":16,"./$.array-methods":3,"./$.assert":4,"./$.iter":15,"./$.uid":25}],9:[function(t,e,r){var n=t("./$"),o=t("./$.def"),i=t("./$.iter"),s=t("./$.assert").inst;e.exports=function(e,r,c,u,a){function f(t,e){var r=h[t];n.FW&&(h[t]=function(t,n){var o=r.call(this,0===t?0:t,n);return e?this:o})}var l=n.g[e],d=l,p=u?"set":"add",h=d&&d.prototype,g={};if(n.isFunction(d)&&(a||!i.BUGGY&&h.forEach&&h.entries)){var $,v=new d,y=v[p](a?{}:-0,1);t("./$.iter-detect")(function(t){new d(t)})||(d=function(t){s(this,d,e);var r=new l;return void 0!=t&&i.forOf(t,u,r[p],r),r},d.prototype=h,n.FW&&(h.constructor=d)),a||v.forEach(function(t,e){$=1/e===-(1/0)}),$&&(f("delete"),f("has"),u&&f("get")),($||y!==v)&&f(p,!0)}else d=c.getConstructor(e,u,p),n.mix(d.prototype,r);return t("./$.cof").set(d,e),t("./$.species")(d),g[e]=d,o(o.G+o.W+o.F*(d!=l),g),a||i.std(d,e,c.getIterConstructor(),c.next,u?"key+value":"value",!u,!0),d}},{"./$":16,"./$.assert":4,"./$.cof":6,"./$.def":11,"./$.iter":15,"./$.iter-detect":14,"./$.species":22}],10:[function(t,e,r){var n=t("./$.assert").fn;e.exports=function(t,e,r){if(n(t),~r&&void 0===e)return t;switch(r){case 1:return function(r){return t.call(e,r)};case 2:return function(r,n){return t.call(e,r,n)};case 3:return function(r,n,o){return t.call(e,r,n,o)}}return function(){return t.apply(e,arguments)}}},{"./$.assert":4}],11:[function(t,e,r){function n(t,e){return function(){return t.apply(e,arguments)}}function o(t,e,r){var a,f,l,d,p=t&o.G,h=p?s:t&o.S?s[e]:(s[e]||{}).prototype,g=p?c:c[e]||(c[e]={});p&&(r=e);for(a in r)f=!(t&o.F)&&h&&a in h,l=(f?h:r)[a],d=t&o.B&&f?n(l,s):t&o.P&&u(l)?n(Function.call,l):l,h&&!f&&(p?h[a]=l:delete h[a]&&i.hide(h,a,l)),g[a]!=l&&i.hide(g,a,d)}var i=t("./$"),s=i.g,c=i.core,u=i.isFunction;s.core=c,o.F=1,o.G=2,o.S=4,o.P=8,o.B=16,o.W=32,e.exports=o},{"./$":16}],12:[function(t,e,r){e.exports=function(t){return t.FW=!0,t.path=t.g,t}},{}],13:[function(t,e,r){e.exports=function(t,e,r){var n=void 0===r;switch(e.length){case 0:return n?t():t.call(r);case 1:return n?t(e[0]):t.call(r,e[0]);case 2:return n?t(e[0],e[1]):t.call(r,e[0],e[1]);case 3:return n?t(e[0],e[1],e[2]):t.call(r,e[0],e[1],e[2]);case 4:return n?t(e[0],e[1],e[2],e[3]):t.call(r,e[0],e[1],e[2],e[3]);case 5:return n?t(e[0],e[1],e[2],e[3],e[4]):t.call(r,e[0],e[1],e[2],e[3],e[4])}return t.apply(r,e)}},{}],14:[function(t,e,r){var n=t("./$.wks")("iterator"),o=!1;try{var i=[7][n]();i["return"]=function(){o=!0},Array.from(i,function(){throw 2})}catch(s){}e.exports=function(t){if(!o)return!1;var e=!1;try{var r=[7],i=r[n]();i.next=function(){e=!0},r[n]=function(){return i},t(r)}catch(s){}return e}},{"./$.wks":27}],15:[function(t,e,r){function n(t,e){u.hide(t,p,e),h in[]&&u.hide(t,h,e)}function o(t,e,r,o){var i=t.prototype,s=i[p]||i[h]||o&&i[o]||r;if(u.FW&&n(i,s),s!==r){var c=u.getProto(s.call(new t));f.set(c,e+" Iterator",!0),u.FW&&u.has(i,h)&&n(c,u.that)}return g[e]=s,g[e+" Iterator"]=u.that,s}function i(t){var e=u.g.Symbol,r=t[e&&e.iterator||h],n=r||t[p]||g[f.classof(t)];return d(n.call(t))}function s(t){var e=t["return"];void 0!==e&&d(e.call(t))}function c(t,e,r,n){try{return n?e(d(r)[0],r[1]):e(r)}catch(o){throw s(t),o}}var u=t("./$"),a=t("./$.ctx"),f=t("./$.cof"),l=t("./$.def"),d=t("./$.assert").obj,p=t("./$.wks")("iterator"),h="@@iterator",g={},$={},v="keys"in[]&&!("next"in[].keys());n($,u.that);var y=e.exports={BUGGY:v,Iterators:g,prototype:$,step:function(t,e){return{value:e,done:!!t}},stepCall:c,close:s,is:function(t){var e=Object(t),r=u.g.Symbol,n=r&&r.iterator||h;return n in e||p in e||u.has(g,f.classof(e))},get:i,set:n,create:function(t,e,r,n){t.prototype=u.create(n||y.prototype,{next:u.desc(1,r)}),f.set(t,e+" Iterator")},define:o,std:function(t,e,r,n,i,s,c){function a(t){return function(){return new r(this,t)}}y.create(r,e,n);var f,d,p=a("key+value"),h=a("value"),g=t.prototype;if("value"==i?h=o(t,e,h,"values"):p=o(t,e,p,"entries"),i&&(f={entries:p,keys:s?h:a("key"),values:h},l(l.P+l.F*v,e,f),c))for(d in f)d in g||u.hide(g,d,f[d])},forOf:function(t,e,r,n){for(var o,u=i(t),f=a(r,n,e?2:1);!(o=u.next()).done;)if(c(u,f,o.value,e)===!1)return s(u)}}},{"./$":16,"./$.assert":4,"./$.cof":6,"./$.ctx":10,"./$.def":11,"./$.wks":27}],16:[function(t,e,r){function n(t){return isNaN(t=+t)?0:(t>0?g:h)(t)}function o(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}function i(t,e,r){return t[e]=r,t}function s(t){return y?function(e,r,n){return b.setDesc(e,r,o(t,n))}:i}function c(t){return null!==t&&("object"==typeof t||"function"==typeof t)}function u(t){return"function"==typeof t}function a(t){if(void 0==t)throw TypeError("Can't call method on  "+t);return t}var f="undefined"!=typeof self?self:Function("return this")(),l={},d=Object.defineProperty,p={}.hasOwnProperty,h=Math.ceil,g=Math.floor,$=Math.max,v=Math.min,y=!!function(){try{return 2==d({},"a",{get:function(){return 2}}).a}catch(t){}}(),m=s(1),b=e.exports=t("./$.fw")({g:f,core:l,html:f.document&&document.documentElement,isObject:c,isFunction:u,it:function(t){function e(e){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(t){return t}),that:function(){return this},toInteger:n,toLength:function(t){return t>0?v(n(t),9007199254740991):0},toIndex:function(t,e){return t=n(t),0>t?$(t+e,0):v(t,e)},has:function(t,e){return p.call(t,e)},create:Object.create,getProto:Object.getPrototypeOf,DESC:y,desc:o,getDesc:Object.getOwnPropertyDescriptor,setDesc:d,getKeys:Object.keys,getNames:Object.getOwnPropertyNames,getSymbols:Object.getOwnPropertySymbols,assertDefined:a,ES5Object:Object,toObject:function(t){return b.ES5Object(a(t))},hide:m,def:s(0),set:f.Symbol?i:m,mix:function(t,e){for(var r in e)m(t,r,e[r]);return t},each:[].forEach});"undefined"!=typeof __e&&(__e=l),"undefined"!=typeof __g&&(__g=f)},{"./$.fw":12}],17:[function(t,e,r){var n=t("./$");e.exports=function(t,e){for(var r,o=n.toObject(t),i=n.getKeys(o),s=i.length,c=0;s>c;)if(o[r=i[c++]]===e)return r}},{"./$":16}],18:[function(t,e,r){var n=t("./$"),o=t("./$.assert").obj;e.exports=function(t){return o(t),n.getSymbols?n.getNames(t).concat(n.getSymbols(t)):n.getNames(t)}},{"./$":16,"./$.assert":4}],19:[function(t,e,r){var n=t("./$"),o=t("./$.invoke"),i=t("./$.assert").fn;e.exports=function(){for(var t=i(this),e=arguments.length,r=Array(e),s=0,c=n.path._,u=!1;e>s;)(r[s]=arguments[s++])===c&&(u=!0);return function(){var n,i=this,s=arguments.length,a=0,f=0;if(!u&&!s)return o(t,r,i);if(n=r.slice(),u)for(;e>a;a++)n[a]===c&&(n[a]=arguments[f++]);for(;s>f;)n.push(arguments[f++]);return o(t,n,i)}}},{"./$":16,"./$.assert":4,"./$.invoke":13}],20:[function(t,e,r){e.exports=function(t,e,r){var n=e===Object(e)?function(t){return e[t]}:e;return function(e){return String(r?e:this).replace(t,n)}}},{}],21:[function(t,e,r){function n(t,e){i.obj(t),i(null===e||o.isObject(e),e,": can't set as prototype!")}var o=t("./$"),i=t("./$.assert");e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,r){try{r=t("./$.ctx")(Function.call,o.getDesc(Object.prototype,"__proto__").set,2),r({},[])}catch(i){e=!0}return function(t,o){return n(t,o),e?t.__proto__=o:r(t,o),t}}():void 0),check:n}},{"./$":16,"./$.assert":4,"./$.ctx":10}],22:[function(t,e,r){var n=t("./$");e.exports=function(e){n.DESC&&n.FW&&n.setDesc(e,t("./$.wks")("species"),{configurable:!0,get:n.that})}},{"./$":16,"./$.wks":27}],23:[function(t,e,r){var n=t("./$");e.exports=function(t){return function(e){var r,o,i=String(n.assertDefined(this)),s=n.toInteger(e),c=i.length;return 0>s||s>=c?t?"":void 0:(r=i.charCodeAt(s),55296>r||r>56319||s+1===c||(o=i.charCodeAt(s+1))<56320||o>57343?t?i.charAt(s):r:t?i.slice(s,s+2):(r-55296<<10)+(o-56320)+65536)}}},{"./$":16}],24:[function(t,e,r){function n(){var t=+this;if(u.has(O,t)){var e=O[t];delete O[t],e()}}function o(t){n.call(t.data)}var i,s,c,u=t("./$"),a=t("./$.ctx"),f=t("./$.cof"),l=t("./$.invoke"),d=u.g,p=u.isFunction,h=u.html,g=d.document,$=d.process,v=d.setImmediate,y=d.clearImmediate,m=d.postMessage,b=d.addEventListener,w=d.MessageChannel,j=0,O={},S="onreadystatechange";p(v)&&p(y)||(v=function(t){for(var e=[],r=1;arguments.length>r;)e.push(arguments[r++]);return O[++j]=function(){l(p(t)?t:Function(t),e)},i(j),j},y=function(t){delete O[t]},"process"==f($)?i=function(t){$.nextTick(a(n,t,1))}:b&&p(m)&&!d.importScripts?(i=function(t){m(t,"*")},b("message",o,!1)):p(w)?(s=new w,c=s.port2,s.port1.onmessage=o,i=a(c.postMessage,c,1)):i=g&&S in g.createElement("script")?function(t){h.appendChild(g.createElement("script"))[S]=function(){h.removeChild(this),n.call(t)}}:function(t){setTimeout(a(n,t,1),0)}),e.exports={set:v,clear:y}},{"./$":16,"./$.cof":6,"./$.ctx":10,"./$.invoke":13}],25:[function(t,e,r){function n(t){return"Symbol("+t+")_"+(++o+Math.random()).toString(36)}var o=0;n.safe=t("./$").g.Symbol||n,e.exports=n},{"./$":16}],26:[function(t,e,r){var n=t("./$"),o=t("./$.wks")("unscopables");!n.FW||o in[]||n.hide(Array.prototype,o,{}),e.exports=function(t){n.FW&&([][o][t]=!0)}},{"./$":16,"./$.wks":27}],27:[function(t,e,r){var n=t("./$").g,o={};e.exports=function(e){return o[e]||(o[e]=n.Symbol&&n.Symbol[e]||t("./$.uid").safe("Symbol."+e))}},{"./$":16,"./$.uid":25}],28:[function(t,e,r){function n(t,e){return function(r){var n,o=k(r),i=0,s=[];for(n in o)n!=h&&O(o,n)&&s.push(n);for(;e>i;)O(o,n=t[i++])&&(~b.call(s,n)||s.push(n));return s}}function o(t){return!a.isObject(t)}function i(){}function s(t){return function(){return t.apply(a.ES5Object(this),arguments)}}function c(t){return function(e,r){g.fn(e);var n=k(this),o=F(n.length),i=t?o-1:0,s=t?-1:1;if(arguments.length<2)for(;;){if(i in n){r=n[i],i+=s;break}i+=s,g(t?i>=0:o>i,"Reduce of empty array with no initial value")}for(;t?i>=0:o>i;i+=s)i in n&&(r=e(r,n[i],i,this));return r}}function u(t){return t>9?t:"0"+t}var a=t("./$"),f=t("./$.cof"),l=t("./$.def"),d=t("./$.invoke"),p=t("./$.array-methods"),h=t("./$.uid").safe("__proto__"),g=t("./$.assert"),$=g.obj,v=Object.prototype,y=[],m=y.slice,b=y.indexOf,w=f.classof,j=Object.defineProperties,O=a.has,S=a.setDesc,x=a.getDesc,E=a.isFunction,k=a.toObject,F=a.toLength,P=!1;if(!a.DESC){try{P=8==S(document.createElement("div"),"x",{get:function(){return 8}}).x}catch(I){}a.setDesc=function(t,e,r){if(P)try{return S(t,e,r)}catch(n){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&($(t)[e]=r.value),t},a.getDesc=function(t,e){if(P)try{return x(t,e)}catch(r){}return O(t,e)?a.desc(!v.propertyIsEnumerable.call(t,e),t[e]):void 0},j=function(t,e){$(t);for(var r,n=a.getKeys(e),o=n.length,i=0;o>i;)a.setDesc(t,r=n[i++],e[r]);return t}}l(l.S+l.F*!a.DESC,"Object",{getOwnPropertyDescriptor:a.getDesc,defineProperty:a.setDesc,defineProperties:j});var D="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(","),A=D.concat("length","prototype"),N=D.length,L=function(t){function e(){return t.apply(this,arguments)}return e.toString=function(){return t.toString()},e}(function(){var t,e=document.createElement("iframe"),r=N,n=">";for(e.style.display="none",a.html.appendChild(e),e.src="javascript:",t=e.contentWindow.document,t.open(),t.write("<script>document.F=Object</script"+n),t.close(),L=t.F;r--;)delete L.prototype[D[r]];return L()});l(l.S,"Object",{getPrototypeOf:a.getProto=a.getProto||function(t){return t=Object(g.def(t)),O(t,h)?t[h]:E(t.constructor)&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?v:null},getOwnPropertyNames:a.getNames=a.getNames||n(A,A.length,!0),create:a.create=a.create||function(t,e){var r;return null!==t?(i.prototype=$(t),r=new i,i.prototype=null,r[h]=t):r=L(),void 0===e?r:j(r,e)},keys:a.getKeys=a.getKeys||n(D,N,!1),seal:a.it,freeze:a.it,preventExtensions:a.it,isSealed:o,isFrozen:o,isExtensible:a.isObject}),l(l.P,"Function",{bind:function(t){function e(){var o=n.concat(m.call(arguments));return d(r,o,this instanceof e?a.create(r.prototype):t)}var r=g.fn(this),n=m.call(arguments,1);return r.prototype&&(e.prototype=r.prototype),e}}),0 in Object("z")&&"z"=="z"[0]||(a.ES5Object=function(t){return"String"==f(t)?t.split(""):Object(t)}),l(l.P+l.F*(a.ES5Object!=Object),"Array",{slice:s(m),join:s(y.join)}),l(l.S,"Array",{isArray:function(t){return"Array"==f(t)}}),l(l.P,"Array",{forEach:a.each=a.each||p(0),map:p(1),filter:p(2),some:p(3),every:p(4),reduce:c(!1),reduceRight:c(!0),indexOf:b=b||t("./$.array-includes")(!1),lastIndexOf:function(t,e){var r=k(this),n=F(r.length),o=n-1;for(arguments.length>1&&(o=Math.min(o,a.toInteger(e))),0>o&&(o=F(n+o));o>=0;o--)if(o in r&&r[o]===t)return o;return-1}}),l(l.P,"String",{trim:t("./$.replacer")(/^\s*([\s\S]*\S)?\s*$/,"$1")}),l(l.S,"Date",{now:function(){return+new Date}}),l(l.P,"Date",{toISOString:function(){if(!isFinite(this))throw RangeError("Invalid time value");var t=this,e=t.getUTCFullYear(),r=t.getUTCMilliseconds(),n=0>e?"-":e>9999?"+":"";return n+("00000"+Math.abs(e)).slice(n?-6:-4)+"-"+u(t.getUTCMonth()+1)+"-"+u(t.getUTCDate())+"T"+u(t.getUTCHours())+":"+u(t.getUTCMinutes())+":"+u(t.getUTCSeconds())+"."+(r>99?r:"0"+u(r))+"Z"}}),"Object"==w(function(){return arguments}())&&(f.classof=function(t){var e=w(t);return"Object"==e&&E(t.callee)?"Arguments":e})},{"./$":16,"./$.array-includes":2,"./$.array-methods":3,"./$.assert":4,"./$.cof":6,"./$.def":11,"./$.invoke":13,"./$.replacer":20,"./$.uid":25}],29:[function(t,e,r){var n=t("./$"),o=t("./$.def"),i=n.toIndex;o(o.P,"Array",{copyWithin:function(t,e){var r=Object(n.assertDefined(this)),o=n.toLength(r.length),s=i(t,o),c=i(e,o),u=arguments[2],a=void 0===u?o:i(u,o),f=Math.min(a-c,o-s),l=1;for(s>c&&c+f>s&&(l=-1,c=c+f-1,s=s+f-1);f-->0;)c in r?r[s]=r[c]:delete r[s],s+=l,c+=l;return r}}),t("./$.unscope")("copyWithin")},{"./$":16,"./$.def":11,"./$.unscope":26}],30:[function(t,e,r){var n=t("./$"),o=t("./$.def"),i=n.toIndex;o(o.P,"Array",{fill:function(t){for(var e=Object(n.assertDefined(this)),r=n.toLength(e.length),o=i(arguments[1],r),s=arguments[2],c=void 0===s?r:i(s,r);c>o;)e[o++]=t;return e}}),t("./$.unscope")("fill")},{"./$":16,"./$.def":11,"./$.unscope":26}],31:[function(t,e,r){var n=t("./$.def");n(n.P,"Array",{findIndex:t("./$.array-methods")(6)}),t("./$.unscope")("findIndex")},{"./$.array-methods":3,"./$.def":11,"./$.unscope":26}],32:[function(t,e,r){var n=t("./$.def");n(n.P,"Array",{find:t("./$.array-methods")(5)}),t("./$.unscope")("find")},{"./$.array-methods":3,"./$.def":11,"./$.unscope":26}],33:[function(t,e,r){var n=t("./$"),o=t("./$.ctx"),i=t("./$.def"),s=t("./$.iter"),c=s.stepCall;i(i.S+i.F*!t("./$.iter-detect")(function(t){Array.from(t)}),"Array",{from:function(t){var e,r,i,u,a=Object(n.assertDefined(t)),f=arguments[1],l=void 0!==f,d=l?o(f,arguments[2],2):void 0,p=0;if(s.is(a))for(u=s.get(a),r=new("function"==typeof this?this:Array);!(i=u.next()).done;p++)r[p]=l?c(u,d,[i.value,p],!0):i.value;else for(r=new("function"==typeof this?this:Array)(e=n.toLength(a.length));e>p;p++)r[p]=l?d(a[p],p):a[p];return r.length=p,r}})},{"./$":16,"./$.ctx":10,"./$.def":11,"./$.iter":15,"./$.iter-detect":14}],34:[function(t,e,r){var n=t("./$"),o=t("./$.unscope"),i=t("./$.uid").safe("iter"),s=t("./$.iter"),c=s.step,u=s.Iterators;s.std(Array,"Array",function(t,e){n.set(this,i,{o:n.toObject(t),i:0,k:e})},function(){var t=this[i],e=t.o,r=t.k,n=t.i++;return!e||n>=e.length?(t.o=void 0,c(1)):"key"==r?c(0,n):"value"==r?c(0,e[n]):c(0,[n,e[n]])},"value"),u.Arguments=u.Array,o("keys"),o("values"),o("entries")},{"./$":16,"./$.iter":15,"./$.uid":25,"./$.unscope":26}],35:[function(t,e,r){var n=t("./$.def");n(n.S,"Array",{of:function(){for(var t=0,e=arguments.length,r=new("function"==typeof this?this:Array)(e);e>t;)r[t]=arguments[t++];return r.length=e,r}})},{"./$.def":11}],36:[function(t,e,r){t("./$.species")(Array)},{"./$.species":22}],37:[function(t,e,r){var n=t("./$"),o="name",i=n.setDesc,s=Function.prototype;o in s||n.FW&&n.DESC&&i(s,o,{configurable:!0,get:function(){var t=String(this).match(/^\s*function ([^ (]*)/),e=t?t[1]:"";return n.has(this,o)||i(this,o,n.desc(5,e)),e},set:function(t){n.has(this,o)||i(this,o,n.desc(0,t))}})},{"./$":16}],38:[function(t,e,r){var n=t("./$.collection-strong");t("./$.collection")("Map",{get:function(t){var e=n.getEntry(this,t);return e&&e.v},set:function(t,e){return n.def(this,0===t?0:t,e)}},n,!0)},{"./$.collection":9,"./$.collection-strong":7}],39:[function(t,e,r){function n(t){return t+1/v-1/v}function o(t){return 0==(t=+t)||t!=t?t:0>t?-1:1}function i(t){return isFinite(t=+t)&&0!=t?0>t?-i(-t):p(t+h(t*t+1)):t}function s(t){return 0==(t=+t)?t:t>-1e-6&&1e-6>t?t+t*t/2:d(t)-1}var c=1/0,u=t("./$.def"),a=Math.E,f=Math.pow,l=Math.abs,d=Math.exp,p=Math.log,h=Math.sqrt,g=Math.ceil,$=Math.floor,v=f(2,-52),y=f(2,-23),m=f(2,127)*(2-y),b=f(2,-126);u(u.S,"Math",{acosh:function(t){return(t=+t)<1?NaN:isFinite(t)?p(t/a+h(t+1)*h(t-1)/a)+1:t},asinh:i,atanh:function(t){return 0==(t=+t)?t:p((1+t)/(1-t))/2},cbrt:function(t){return o(t=+t)*f(l(t),1/3)},clz32:function(t){return(t>>>=0)?31-$(p(t+.5)*Math.LOG2E):32},cosh:function(t){return(d(t=+t)+d(-t))/2},expm1:s,fround:function(t){var e,r,i=l(t),s=o(t);return b>i?s*n(i/b/y)*b*y:(e=(1+y/v)*i,r=e-(e-i),r>m||r!=r?s*c:s*r)},hypot:function(t,e){for(var r,n=0,o=arguments.length,i=o,s=Array(o),u=-c;o--;){if(r=s[o]=+arguments[o],r==c||r==-c)return c;r>u&&(u=r)}for(u=r||1;i--;)n+=f(s[i]/u,2);return u*h(n)},imul:function(t,e){var r=65535,n=+t,o=+e,i=r&n,s=r&o;return 0|i*s+((r&n>>>16)*s+i*(r&o>>>16)<<16>>>0)},log1p:function(t){return(t=+t)>-1e-8&&1e-8>t?t-t*t/2:p(1+t)},log10:function(t){return p(t)/Math.LN10},log2:function(t){return p(t)/Math.LN2},sign:o,sinh:function(t){return l(t=+t)<1?(s(t)-s(-t))/2:(d(t-1)-d(-t-1))*(a/2)},tanh:function(t){var e=s(t=+t),r=s(-t);return e==c?1:r==c?-1:(e-r)/(d(t)+d(-t))},trunc:function(t){return(t>0?$:g)(t)}})},{"./$.def":11}],40:[function(t,e,r){function n(t){var e,r;if(c(e=t.valueOf)&&!s(r=e.call(t)))return r;if(c(e=t.toString)&&!s(r=e.call(t)))return r;throw TypeError("Can't convert object to number")}function o(t){if(s(t)&&(t=n(t)),"string"==typeof t&&t.length>2&&48==t.charCodeAt(0)){var e=!1;switch(t.charCodeAt(1)){case 66:case 98:e=!0;case 79:case 111:return parseInt(t.slice(2),e?2:8)}}return+t}var i=t("./$"),s=i.isObject,c=i.isFunction,u="Number",a=i.g[u],f=a,l=a.prototype;!i.FW||a("0o1")&&a("0b1")||(a=function d(t){return this instanceof d?new f(o(t)):o(t)},i.each.call(i.DESC?i.getNames(f):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),function(t){i.has(f,t)&&!i.has(a,t)&&i.setDesc(a,t,i.getDesc(f,t))}),a.prototype=l,l.constructor=a,i.hide(i.g,u,a))},{"./$":16}],41:[function(t,e,r){function n(t){return!o.isObject(t)&&u(t)&&c(t)===t}var o=t("./$"),i=t("./$.def"),s=Math.abs,c=Math.floor,u=o.g.isFinite,a=9007199254740991;i(i.S,"Number",{EPSILON:Math.pow(2,-52),isFinite:function(t){return"number"==typeof t&&u(t)},isInteger:n,isNaN:function(t){return t!=t},isSafeInteger:function(t){return n(t)&&s(t)<=a},MAX_SAFE_INTEGER:a,MIN_SAFE_INTEGER:-a,parseFloat:parseFloat,parseInt:parseInt})},{"./$":16,"./$.def":11}],42:[function(t,e,r){var n=t("./$.def");n(n.S,"Object",{assign:t("./$.assign")})},{"./$.assign":5,"./$.def":11}],43:[function(t,e,r){var n=t("./$.def");n(n.S,"Object",{is:function(t,e){return t===e?0!==t||1/t===1/e:t!=t&&e!=e}})},{"./$.def":11}],44:[function(t,e,r){var n=t("./$.def");n(n.S,"Object",{setPrototypeOf:t("./$.set-proto").set})},{"./$.def":11,"./$.set-proto":21}],45:[function(t,e,r){function n(t,e){var r=(o.core.Object||{})[t]||Object[t],n=0,u={};u[t]=1==e?function(t){return s(t)?r(t):t}:2==e?function(t){return s(t)?r(t):!0}:3==e?function(t){return s(t)?r(t):!1}:4==e?function(t,e){return r(c(t),e)}:5==e?function(t){return r(Object(o.assertDefined(t)))}:function(t){return r(c(t))};try{r("z")}catch(a){n=1}i(i.S+i.F*n,"Object",u)}var o=t("./$"),i=t("./$.def"),s=o.isObject,c=o.toObject;n("freeze",1),n("seal",1),n("preventExtensions",1),n("isFrozen",2),n("isSealed",2),n("isExtensible",3),n("getOwnPropertyDescriptor",4),n("getPrototypeOf",5),n("keys"),n("getOwnPropertyNames")},{"./$":16,"./$.def":11}],46:[function(t,e,r){var n=t("./$"),o=t("./$.cof"),i={};i[t("./$.wks")("toStringTag")]="z",n.FW&&"z"!=o(i)&&n.hide(Object.prototype,"toString",function(){return"[object "+o.classof(this)+"]"})},{"./$":16,"./$.cof":6,"./$.wks":27}],47:[function(t,e,r){function n(t){var e=F(t)[$];return void 0!=e?e:t}function o(t){var e;return E(t)&&(e=t.then),x(e)?e:!1}function i(t){var e,r=t[v],n=r.c,o=0;if(r.h)return!1;for(;n.length>o;)if(e=n[o++],e.fail||!i(e.P))return!1;return!0}function s(t,e){var r=t.c;(e||r.length)&&j(function(){var n=t.p,s=t.v,c=1==t.s,u=0;if(e&&i(n))setTimeout(function(){i(n)&&("process"==d(w)?w.emit("unhandledRejection",s,n):b.console&&x(console.error)&&console.error("Unhandled promise rejection",s))},1e3);else for(;r.length>u;)!function(e){var r,n,i=c?e.ok:e.fail;try{i?(c||(t.h=!0),r=i===!0?s:i(s),r===e.P?e.rej(TypeError(m+"-chain cycle")):(n=o(r))?n.call(r,e.res,e.rej):e.res(r)):e.rej(s)}catch(u){e.rej(u)}}(r[u++]);r.length=0})}function c(t){var e=this;e.d||(e.d=!0,e=e.r||e,e.v=t,e.s=2,s(e,!0))}function u(t){var e,r,n=this;if(!n.d){n.d=!0,n=n.r||n;try{(e=o(t))?(r={r:n,d:!1},e.call(t,l(u,r,1),l(c,r,1))):(n.v=t,n.s=1,s(n))}catch(i){c.call(r||{r:n,d:!1},i)}}}var a,f=t("./$"),l=t("./$.ctx"),d=t("./$.cof"),p=t("./$.def"),h=t("./$.assert"),g=t("./$.iter"),$=t("./$.wks")("species"),v=t("./$.uid").safe("record"),y=g.forOf,m="Promise",b=f.g,w=b.process,j=w&&w.nextTick||t("./$.task").set,O=b[m],S=O,x=f.isFunction,E=f.isObject,k=h.fn,F=h.obj;x(O)&&x(O.resolve)&&O.resolve(a=new O(function(){}))==a||(O=function(t){k(t);var e={p:h.inst(this,O,m),c:[],s:0,d:!1,v:void 0,h:!1};f.hide(this,v,e);try{t(l(u,e,1),l(c,e,1))}catch(r){c.call(e,r)}},f.mix(O.prototype,{then:function(t,e){var r=F(F(this).constructor)[$],n={ok:x(t)?t:!0,fail:x(e)?e:!1},o=n.P=new(void 0!=r?r:O)(function(t,e){n.res=k(t),n.rej=k(e)}),i=this[v];return i.c.push(n),i.s&&s(i),o},"catch":function(t){return this.then(void 0,t)}})),p(p.G+p.W+p.F*(O!=S),{Promise:O}),d.set(O,m),t("./$.species")(O),p(p.S,m,{reject:function(t){return new(n(this))(function(e,r){r(t)})},resolve:function(t){return E(t)&&v in t&&f.getProto(t)===this.prototype?t:new(n(this))(function(e){e(t)})}}),p(p.S+p.F*!t("./$.iter-detect")(function(t){O.all(t)["catch"](function(){})}),m,{all:function(t){var e=n(this),r=[];return new e(function(n,o){y(t,!1,r.push,r);var i=r.length,s=Array(i);i?f.each.call(r,function(t,r){e.resolve(t).then(function(t){s[r]=t,--i||n(s)},o)}):n(s)})},race:function(t){var e=n(this);return new e(function(r,n){y(t,!1,function(t){e.resolve(t).then(r,n)})})}})},{"./$":16,"./$.assert":4,"./$.cof":6,"./$.ctx":10,"./$.def":11,"./$.iter":15,"./$.iter-detect":14,"./$.species":22,"./$.task":24,"./$.uid":25,"./$.wks":27}],48:[function(t,e,r){function n(t){var e,r=[];for(e in t)r.push(e);c.set(this,l,{o:t,a:r,i:0})}function o(t){return function(e){m(e);try{return t.apply(void 0,arguments),!0}catch(r){return!1}}}function i(t,e){for(var r=arguments,n=!0;n;){u=a=o=void 0,n=!1;var o,i=t,s=e,u=r.length<3?i:r[2],a=g(m(i),s);if(a)return c.has(a,"value")?a.value:void 0===a.get?void 0:a.get.call(u);if(!h(o=v(i)))return void 0;r=[t=o,e=s,u],n=!0}}function s(t,e,r){var n=arguments,o=!0;t:for(;o;){l=d=i=s=void 0,o=!1;var i,s,u=t,a=e,f=r,l=n.length<4?u:n[3],d=g(m(u),a);if(!d){if(h(s=v(u))){n=[t=s,e=a,r=f,l],o=!0;continue t}d=c.desc(0)}return c.has(d,"value")?d.writable!==!1&&h(l)?(i=g(l,a)||c.desc(0),i.value=f,$(l,a,i),!0):!1:void 0===d.set?!1:(d.set.call(l,f),!0)}}var c=t("./$"),u=t("./$.def"),a=t("./$.set-proto"),f=t("./$.iter"),l=t("./$.uid").safe("iter"),d=f.step,p=t("./$.assert"),h=c.isObject,g=c.getDesc,$=c.setDesc,v=c.getProto,y=Function.apply,m=p.obj,b=Object.isExtensible||c.it;f.create(n,"Object",function(){var t,e=this[l],r=e.a;do if(e.i>=r.length)return d(1);while(!((t=r[e.i++])in e.o));return d(0,t)});var w={apply:t("./$.ctx")(Function.call,y,3),construct:function(t,e){var r=p.fn(arguments.length<3?t:arguments[2]).prototype,n=c.create(h(r)?r:Object.prototype),o=y.call(t,n,e);return h(o)?o:n},defineProperty:o($),deleteProperty:function(t,e){var r=g(m(t),e);return r&&!r.configurable?!1:delete t[e]},enumerate:function(t){return new n(m(t))},get:i,getOwnPropertyDescriptor:function(t,e){return g(m(t),e)},getPrototypeOf:function(t){return v(m(t))},has:function(t,e){return e in t},isExtensible:function(t){return!!b(m(t))},ownKeys:t("./$.own-keys"),preventExtensions:o(Object.preventExtensions||c.it),set:s};a&&(w.setPrototypeOf=function(t,e){a.check(t,e);try{return a.set(t,e),!0}catch(r){return!1}}),u(u.G,{Reflect:{}}),u(u.S,"Reflect",w)},{"./$":16,"./$.assert":4,"./$.ctx":10,"./$.def":11,"./$.iter":15,"./$.own-keys":18,"./$.set-proto":21,"./$.uid":25}],49:[function(t,e,r){var n=t("./$"),o=t("./$.cof"),i=n.g.RegExp,s=i,c=i.prototype;n.FW&&n.DESC&&(function(){try{return"/a/i"==i(/a/g,"i")}catch(t){}}()||(i=function(t,e){return new s("RegExp"==o(t)&&void 0!==e?t.source:t,e)},n.each.call(n.getNames(s),function(t){t in i||n.setDesc(i,t,{configurable:!0,get:function(){return s[t]},set:function(e){s[t]=e}})}),c.constructor=i,i.prototype=c,n.hide(n.g,"RegExp",i)),"g"!=/./g.flags&&n.setDesc(c,"flags",{configurable:!0,get:t("./$.replacer")(/^.*\/(\w*)$/,"$1")})),t("./$.species")(i)},{"./$":16,"./$.cof":6,"./$.replacer":20,"./$.species":22}],50:[function(t,e,r){var n=t("./$.collection-strong");t("./$.collection")("Set",{add:function(t){return n.def(this,t=0===t?0:t,t)}},n)},{"./$.collection":9,"./$.collection-strong":7}],51:[function(t,e,r){var n=t("./$.def");n(n.P,"String",{codePointAt:t("./$.string-at")(!1)})},{"./$.def":11,"./$.string-at":23}],52:[function(t,e,r){var n=t("./$"),o=t("./$.cof"),i=t("./$.def"),s=n.toLength;i(i.P,"String",{endsWith:function(t){if("RegExp"==o(t))throw TypeError();var e=String(n.assertDefined(this)),r=arguments[1],i=s(e.length),c=void 0===r?i:Math.min(s(r),i);return t+="",e.slice(c-t.length,c)===t}})},{"./$":16,"./$.cof":6,"./$.def":11}],53:[function(t,e,r){var n=t("./$.def"),o=t("./$").toIndex,i=String.fromCharCode;n(n.S,"String",{fromCodePoint:function(t){for(var e,r=[],n=arguments.length,s=0;n>s;){if(e=+arguments[s++],o(e,1114111)!==e)throw RangeError(e+" is not a valid code point");r.push(65536>e?i(e):i(((e-=65536)>>10)+55296,e%1024+56320))}return r.join("")}})},{"./$":16,"./$.def":11}],54:[function(t,e,r){var n=t("./$"),o=t("./$.cof"),i=t("./$.def");i(i.P,"String",{includes:function(t){if("RegExp"==o(t))throw TypeError();return!!~String(n.assertDefined(this)).indexOf(t,arguments[1])}})},{"./$":16,"./$.cof":6,"./$.def":11}],55:[function(t,e,r){var n=t("./$").set,o=t("./$.string-at")(!0),i=t("./$.uid").safe("iter"),s=t("./$.iter"),c=s.step;
s.std(String,"String",function(t){n(this,i,{o:String(t),i:0})},function(){var t,e=this[i],r=e.o,n=e.i;return n>=r.length?c(1):(t=o.call(r,n),e.i+=t.length,c(0,t))})},{"./$":16,"./$.iter":15,"./$.string-at":23,"./$.uid":25}],56:[function(t,e,r){var n=t("./$"),o=t("./$.def");o(o.S,"String",{raw:function(t){for(var e=n.toObject(t.raw),r=n.toLength(e.length),o=arguments.length,i=[],s=0;r>s;)i.push(String(e[s++])),o>s&&i.push(String(arguments[s]));return i.join("")}})},{"./$":16,"./$.def":11}],57:[function(t,e,r){var n=t("./$"),o=t("./$.def");o(o.P,"String",{repeat:function(t){var e=String(n.assertDefined(this)),r="",o=n.toInteger(t);if(0>o||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(e+=e))1&o&&(r+=e);return r}})},{"./$":16,"./$.def":11}],58:[function(t,e,r){var n=t("./$"),o=t("./$.cof"),i=t("./$.def");i(i.P,"String",{startsWith:function(t){if("RegExp"==o(t))throw TypeError();var e=String(n.assertDefined(this)),r=n.toLength(Math.min(arguments[1],e.length));return t+="",e.slice(r,r+t.length)===t}})},{"./$":16,"./$.cof":6,"./$.def":11}],59:[function(t,e,r){function n(t){var e=y[t]=o.set(o.create(p.prototype),$,t);return o.DESC&&g&&o.setDesc(Object.prototype,t,{configurable:!0,set:function(e){f(this,t,e)}}),e}var o=t("./$"),i=t("./$.cof").set,s=t("./$.uid"),c=t("./$.def"),u=t("./$.keyof"),a=o.has,f=o.hide,l=o.getNames,d=o.toObject,p=o.g.Symbol,h=p,g=!1,$=s.safe("tag"),v={},y={};o.isFunction(p)||(p=function b(t){if(this instanceof b)throw TypeError("Symbol is not a constructor");return n(s(t))},f(p.prototype,"toString",function(){return this[$]})),c(c.G+c.W,{Symbol:p});var m={"for":function(t){return a(v,t+="")?v[t]:v[t]=p(t)},keyFor:function(t){return u(v,t)},pure:s.safe,set:o.set,useSetter:function(){g=!0},useSimple:function(){g=!1}};o.each.call("hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),function(e){var r=t("./$.wks")(e);m[e]=p===h?r:n(r)}),g=!0,c(c.S,"Symbol",m),c(c.S+c.F*(p!=h),"Object",{getOwnPropertyNames:function(t){for(var e,r=l(d(t)),n=[],o=0;r.length>o;)a(y,e=r[o++])||n.push(e);return n},getOwnPropertySymbols:function(t){for(var e,r=l(d(t)),n=[],o=0;r.length>o;)a(y,e=r[o++])&&n.push(y[e]);return n}}),i(p,"Symbol"),i(Math,"Math",!0),i(o.g.JSON,"JSON",!0)},{"./$":16,"./$.cof":6,"./$.def":11,"./$.keyof":17,"./$.uid":25,"./$.wks":27}],60:[function(t,e,r){var n=t("./$"),o=t("./$.collection-weak"),i=o.leakStore,s=o.ID,c=o.WEAK,u=n.has,a=n.isObject,f=Object.isFrozen||n.core.Object.isFrozen,l={},d=t("./$.collection")("WeakMap",{get:function(t){if(a(t)){if(f(t))return i(this).get(t);if(u(t,c))return t[c][this[s]]}},set:function(t,e){return o.def(this,t,e)}},o,!0,!0);n.FW&&7!=(new d).set((Object.freeze||Object)(l),7).get(l)&&n.each.call(["delete","has","get","set"],function(t){var e=d.prototype[t];d.prototype[t]=function(r,n){if(a(r)&&f(r)){var o=i(this)[t](r,n);return"set"==t?this:o}return e.call(this,r,n)}})},{"./$":16,"./$.collection":9,"./$.collection-weak":8}],61:[function(t,e,r){var n=t("./$.collection-weak");t("./$.collection")("WeakSet",{add:function(t){return n.def(this,t,!0)}},n,!1,!0)},{"./$.collection":9,"./$.collection-weak":8}],62:[function(t,e,r){var n=t("./$.def");n(n.P,"Array",{includes:t("./$.array-includes")(!0)}),t("./$.unscope")("includes")},{"./$.array-includes":2,"./$.def":11,"./$.unscope":26}],63:[function(t,e,r){var n=t("./$"),o=t("./$.def"),i=t("./$.own-keys");o(o.S,"Object",{getOwnPropertyDescriptors:function(t){var e=n.toObject(t),r={};return n.each.call(i(e),function(t){n.setDesc(r,t,n.desc(0,n.getDesc(e,t)))}),r}})},{"./$":16,"./$.def":11,"./$.own-keys":18}],64:[function(t,e,r){function n(t){return function(e){var r,n=o.toObject(e),i=o.getKeys(e),s=i.length,c=0,u=Array(s);if(t)for(;s>c;)u[c]=[r=i[c++],n[r]];else for(;s>c;)u[c]=n[i[c++]];return u}}var o=t("./$"),i=t("./$.def");i(i.S,"Object",{values:n(!1),entries:n(!0)})},{"./$":16,"./$.def":11}],65:[function(t,e,r){var n=t("./$.def");n(n.S,"RegExp",{escape:t("./$.replacer")(/([\\\-[\]{}()*+?.,^$|])/g,"\\$1",!0)})},{"./$.def":11,"./$.replacer":20}],66:[function(t,e,r){var n=t("./$.def"),o=t("./$.iter").forOf;n(n.P,"Set",{toJSON:function(){var t=[];return o(this,!1,t.push,t),t}})},{"./$.def":11,"./$.iter":15}],67:[function(t,e,r){var n=t("./$.def");n(n.P,"String",{at:t("./$.string-at")(!0)})},{"./$.def":11,"./$.string-at":23}],68:[function(t,e,r){function n(e,r){o.each.call(e.split(","),function(e){void 0==r&&e in s?c[e]=s[e]:e in[]&&(c[e]=t("./$.ctx")(Function.call,[][e],r))})}var o=t("./$"),i=t("./$.def"),s=o.core.Array||Array,c={};n("pop,reverse,shift,keys,values,entries",1),n("indexOf,every,some,forEach,map,filter,find,findIndex,includes",3),n("join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill,turn"),i(i.S,"Array",c)},{"./$":16,"./$.ctx":10,"./$.def":11}],69:[function(t,e,r){t("./es6.array.iterator");var n=t("./$"),o=t("./$.iter").Iterators,i=t("./$.wks")("iterator"),s=n.g.NodeList;!n.FW||!s||i in s.prototype||n.hide(s.prototype,i,o.Array),o.NodeList=o.Array},{"./$":16,"./$.iter":15,"./$.wks":27,"./es6.array.iterator":34}],70:[function(t,e,r){var n=t("./$.def"),o=t("./$.task");n(n.G+n.B,{setImmediate:o.set,clearImmediate:o.clear})},{"./$.def":11,"./$.task":24}],71:[function(t,e,r){function n(t){return u?function(e,r){return t(s(c,[].slice.call(arguments,2),o.isFunction(e)?e:Function(e)),r)}:t}var o=t("./$"),i=t("./$.def"),s=t("./$.invoke"),c=t("./$.partial"),u=!!o.g.navigator&&/MSIE .\./.test(navigator.userAgent);i(i.G+i.B+i.F*u,{setTimeout:n(o.g.setTimeout),setInterval:n(o.g.setInterval)})},{"./$":16,"./$.def":11,"./$.invoke":13,"./$.partial":19}],72:[function(t,e,r){t("./modules/es5"),t("./modules/es6.symbol"),t("./modules/es6.object.assign"),t("./modules/es6.object.is"),t("./modules/es6.object.set-prototype-of"),t("./modules/es6.object.to-string"),t("./modules/es6.object.statics-accept-primitives"),t("./modules/es6.function.name"),t("./modules/es6.number.constructor"),t("./modules/es6.number.statics"),t("./modules/es6.math"),t("./modules/es6.string.from-code-point"),t("./modules/es6.string.raw"),t("./modules/es6.string.iterator"),t("./modules/es6.string.code-point-at"),t("./modules/es6.string.ends-with"),t("./modules/es6.string.includes"),t("./modules/es6.string.repeat"),t("./modules/es6.string.starts-with"),t("./modules/es6.array.from"),t("./modules/es6.array.of"),t("./modules/es6.array.iterator"),t("./modules/es6.array.species"),t("./modules/es6.array.copy-within"),t("./modules/es6.array.fill"),t("./modules/es6.array.find"),t("./modules/es6.array.find-index"),t("./modules/es6.regexp"),t("./modules/es6.promise"),t("./modules/es6.map"),t("./modules/es6.set"),t("./modules/es6.weak-map"),t("./modules/es6.weak-set"),t("./modules/es6.reflect"),t("./modules/es7.array.includes"),t("./modules/es7.string.at"),t("./modules/es7.regexp.escape"),t("./modules/es7.object.get-own-property-descriptors"),t("./modules/es7.object.to-array"),t("./modules/es7.set.to-json"),t("./modules/js.array.statics"),t("./modules/web.timers"),t("./modules/web.immediate"),t("./modules/web.dom.iterable"),e.exports=t("./modules/$").core},{"./modules/$":16,"./modules/es5":28,"./modules/es6.array.copy-within":29,"./modules/es6.array.fill":30,"./modules/es6.array.find":32,"./modules/es6.array.find-index":31,"./modules/es6.array.from":33,"./modules/es6.array.iterator":34,"./modules/es6.array.of":35,"./modules/es6.array.species":36,"./modules/es6.function.name":37,"./modules/es6.map":38,"./modules/es6.math":39,"./modules/es6.number.constructor":40,"./modules/es6.number.statics":41,"./modules/es6.object.assign":42,"./modules/es6.object.is":43,"./modules/es6.object.set-prototype-of":44,"./modules/es6.object.statics-accept-primitives":45,"./modules/es6.object.to-string":46,"./modules/es6.promise":47,"./modules/es6.reflect":48,"./modules/es6.regexp":49,"./modules/es6.set":50,"./modules/es6.string.code-point-at":51,"./modules/es6.string.ends-with":52,"./modules/es6.string.from-code-point":53,"./modules/es6.string.includes":54,"./modules/es6.string.iterator":55,"./modules/es6.string.raw":56,"./modules/es6.string.repeat":57,"./modules/es6.string.starts-with":58,"./modules/es6.symbol":59,"./modules/es6.weak-map":60,"./modules/es6.weak-set":61,"./modules/es7.array.includes":62,"./modules/es7.object.get-own-property-descriptors":63,"./modules/es7.object.to-array":64,"./modules/es7.regexp.escape":65,"./modules/es7.set.to-json":66,"./modules/es7.string.at":67,"./modules/js.array.statics":68,"./modules/web.dom.iterable":69,"./modules/web.immediate":70,"./modules/web.timers":71}],73:[function(t,e,r){(function(t){!function(t){function r(t,e,r,n){var i=Object.create((e||o).prototype);return i._invoke=c(t,r||null,new l(n||[])),i}function n(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(n){return{type:"throw",arg:n}}}function o(){}function i(){}function s(){}function c(t,e,r){var o=m;return function(i,s){if(o===w)throw new Error("Generator is already running");if(o===j)return p();for(;;){var c=r.delegate;if(c){if("return"===i||"throw"===i&&c.iterator["throw"]===h){r.delegate=null;var u=c.iterator["return"];if(u){var a=n(u,c.iterator,s);if("throw"===a.type){i="throw",s=a.arg;continue}}if("return"===i)continue}var a=n(c.iterator[i],c.iterator,s);if("throw"===a.type){r.delegate=null,i="throw",s=a.arg;continue}i="next",s=h;var f=a.arg;if(!f.done)return o=b,f;r[c.resultName]=f.value,r.next=c.nextLoc,r.delegate=null}if("next"===i)o===b?r.sent=s:delete r.sent;else if("throw"===i){if(o===m)throw o=j,s;r.dispatchException(s)&&(i="next",s=h)}else"return"===i&&r.abrupt("return",s);o=w;var a=n(t,e,r);if("normal"===a.type){o=r.done?j:b;var f={value:a.arg,done:r.done};if(a.arg!==O)return f;r.delegate&&"next"===i&&(s=h)}else"throw"===a.type&&(o=j,i="throw",s=a.arg)}}}function u(t){S[t]=function(e){return this._invoke(t,e)}}function a(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function f(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function l(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(a,this),this.reset()}function d(t){if(t){var e=t[$];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,n=function o(){for(;++r<t.length;)if(g.call(t,r))return o.value=t[r],o.done=!1,o;return o.value=h,o.done=!0,o};return n.next=n}}return{next:p}}function p(){return{value:h,done:!0}}var h,g=Object.prototype.hasOwnProperty,$="function"==typeof Symbol&&Symbol.iterator||"@@iterator",v="object"==typeof e,y=t.regeneratorRuntime;if(y)return void(v&&(e.exports=y));y=t.regeneratorRuntime=v?e.exports:{},y.wrap=r;var m="suspendedStart",b="suspendedYield",w="executing",j="completed",O={},S=s.prototype=o.prototype;i.prototype=S.constructor=s,s.constructor=i,i.displayName="GeneratorFunction",y.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return e?e===i||"GeneratorFunction"===(e.displayName||e.name):!1},y.mark=function(t){return t.__proto__=s,t.prototype=Object.create(S),t},y.async=function(t,e,o,i){return new Promise(function(s,c){function u(t,e){var r=n(a[t],a,e);if("throw"===r.type)return void c(r.arg);var o=r.arg;o.done?s(o.value):Promise.resolve(o.value).then(f,l)}var a=r(t,e,o,i),f=u.bind(a,"next"),l=u.bind(a,"throw");f()})},u("next"),u("throw"),u("return"),S[$]=function(){return this},S.toString=function(){return"[object Generator]"},y.keys=function(t){var e=[];for(var r in t)e.push(r);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},y.values=d,l.prototype={constructor:l,reset:function(){this.prev=0,this.next=0,this.sent=h,this.done=!1,this.delegate=null,this.tryEntries.forEach(f);for(var t,e=0;g.call(this,t="t"+e)||20>e;++e)this[t]=null},stop:function(){this.done=!0;var t=this.tryEntries[0],e=t.completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){function e(e,n){return i.type="throw",i.arg=t,r.next=e,!!n}if(this.done)throw t;for(var r=this,n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],i=o.completion;if("root"===o.tryLoc)return e("end");if(o.tryLoc<=this.prev){var s=g.call(o,"catchLoc"),c=g.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return e(o.catchLoc,!0);if(this.prev<o.finallyLoc)return e(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return e(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return e(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&g.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?this.next=o.finallyLoc:this.complete(i),O},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=t.arg,this.next="end"):"normal"===t.type&&e&&(this.next=e),O},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc)}},"catch":function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;f(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,r){return this.delegate={iterator:d(t),resultName:e,nextLoc:r},O}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);


}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],2:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),_get=function e(t,r,n){var a=Object.getOwnPropertyDescriptor(t,r);if(void 0===a){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,r,n)}if("value"in a)return a.value;var o=a.get;return void 0===o?void 0:o.call(n)},_inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)};Object.defineProperty(exports,"__esModule",{value:!0});var _GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),_Component$Registry=require("./component.js"),_RenderableTexturedRect=require("./renderable.js"),_mMath=require("./utils.js"),uid=0,AnimationSystem=function(e){function t(){var e=void 0===arguments[0]?"animation"+uid++:arguments[0];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,["animatable"])}return _inherits(t,e),_createClass(t,[{key:"update",value:function(e,t){var r=_Component$Registry.Registry.getFlag("animatable");e.each(function(e){var n=e.get(r),a=n.current,i=n.__last,o=n.animations[n.current];if(a!==i&&(n.animations[i].current_frame=0,n.animations[i].current_time=0),o.current_time+t>=o.frametime){var s=o.frames.length;(o.current_frame<s-1||o.repeatable)&&(o.current_frame=(o.current_frame+1)%s,o.frames[o.current_frame].transform!==o.transform&&(o.frames[o.current_frame].transform=o.transform),e.add(o.frames[o.current_frame]))}n.__last=a,o.current_time=(o.current_time+t)%o.frametime},this.lock)}}]),t}(_GameSystem3["default"]),Animation=function(){function e(t,r){var n=void 0===arguments[2]?!0:arguments[2],a=void 0===arguments[3]?_mMath.mMath.i():arguments[3];_classCallCheck(this,e),this._frames=t,this._frametime=1e3/(r||1),this._repeatable=n,this.current_frame=0,this.current_time=0,this.transform=a}return _createClass(e,[{key:"frames",get:function(){return this._frames}},{key:"frametime",get:function(){return this._frametime}},{key:"repeatable",get:function(){return this._repeatable}}]),e}(),Animatable=function(e){function t(e,r,n){_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,"animatable"),this._animations=r,this.current=n,this.__last=this.current}return _inherits(t,e),_createClass(t,[{key:"animations",get:function(){return this._animations}}]),t}(_Component$Registry.Component);exports.AnimationSystem=AnimationSystem,exports.Animation=Animation,exports.Animatable=Animatable;

},{"./component.js":6,"./renderable.js":16,"./system.js":23,"./utils.js":25}],3:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_get=function e(t,o,r){var n=Object.getOwnPropertyDescriptor(t,o);if(void 0===n){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,o,r)}if("value"in n)return n.value;var a=n.get;return void 0===a?void 0:a.call(r)},_inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)};Object.defineProperty(exports,"__esModule",{value:!0});var _Component2=require("./component.js"),AABBCollidable=function(e){function t(e){var o=void 0===arguments[1]?0:arguments[1],r=void 0===arguments[2]?0:arguments[2],n=void 0===arguments[3]?"slide":arguments[3];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,"collidable"),this.type="AABB",this.hw=o,this.hh=r,this.reaction=n,this.active_faces=[!0,!0,!0,!0],this.__collided=[]}return _inherits(t,e),t}(_Component2.Component);exports["default"]=AABBCollidable,module.exports=exports["default"];

},{"./component.js":6}],4:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var a=0;a<t.length;a++){var o=t[a];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,a,o){return a&&e(t.prototype,a),o&&e(t,o),t}}(),_get=function e(t,a,o){var i=Object.getOwnPropertyDescriptor(t,a);if(void 0===i){var r=Object.getPrototypeOf(t);return null===r?void 0:e(r,a,o)}if("value"in i)return i.value;var n=i.get;return void 0===n?void 0:n.call(o)},_inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)};Object.defineProperty(exports,"__esModule",{value:!0});var _GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),_Component$Registry=require("./component.js"),_vMath=require("./utils.js"),_resolveSweptAABB$resolveDiscreteAABB=require("./collisionresolution.js"),uid=0,TOP=0,RIGHT=1,BOTTOM=2,LEFT=3,CollisionDetectionSystem=function(e){function t(){var e=void 0===arguments[0]?"collisiondetection"+uid++:arguments[0];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,["position","collidable","movable"])}return _inherits(t,e),_createClass(t,[{key:"update",value:function(e,a){var o=this,i=[],r=function(e,t){return i.some(function(a){return a[0]===e.id&&a[1]===t.id||a[1]===e.id&&a[0]===t.id})},n=_Component$Registry.Registry.getFlag("collidable"),l=_Component$Registry.Registry.getFlag("position");e.each(function(s){e.each(function(e){if(s!==e&&!r(s,e)){i.push([s.id,e.id]);var a=s.get(n),o=e.get(n),c=s.get(l),h=e.get(l);a.__collided=[],o.__collided=[],"AABB"===a.type&&"AABB"===o.type&&t.__AABBBooleanTest(a,o,c,h)&&i.push(s.id,e.id)}},o.lock),t.mapCollide(e.map,s,a)},this.lock)}}],[{key:"mapCollide",value:function(e,a,o){var i=e.__collidable,r=e.tilewidth,n=e.tileheight,l=_Component$Registry.Registry.getFlag("collidable"),s=_Component$Registry.Registry.getFlag("position"),c=_Component$Registry.Registry.getFlag("movable"),h=a.get(l),y=a.get(s),v=a.get(c),m=o/1e3,u=_vMath.vMath.mul(v.velocity,m),_=t.getSweptBroadphaseBox(a,o),f=!0,p=!1,d=void 0;try{for(var x,g=e.collision[Symbol.iterator]();!(f=(x=g.next()).done);f=!0)for(var B=x.value,T=B.length,M=0;T>M;M+=1)for(var A=B[M].length,b=0;A>b;b+=1){var w=B[M][b];if(w){var O=_vMath.vMath.vec2((b+.5)*r,(M+.5)*n);if(i.active_faces=w,"AABB"===h.type&&t.__AABBBooleanTest(_.collidable,i,_.position,O)){var R=t.__SweptAABBTest(h,i,y,O,u);if(R.t>0&&R.t<1)_resolveSweptAABB$resolveDiscreteAABB.resolveSweptAABB(a,R,o);else{var C=t.__AABBPenetrationTest(h,i,y,O);C.depth>0&&_resolveSweptAABB$resolveDiscreteAABB.resolveDiscreteAABB(a,C,o)}}}}}catch(S){p=!0,d=S}finally{try{!f&&g["return"]&&g["return"]()}finally{if(p)throw d}}}},{key:"getSweptBroadphaseBox",value:function(e,t){var a=_Component$Registry.Registry.getFlag("collidable"),o=_Component$Registry.Registry.getFlag("position"),i=_Component$Registry.Registry.getFlag("movable"),r=t/1e3,n=e.get(a),l=e.get(o),s=_vMath.vMath.mul(e.get(i).velocity,r),c=Math.min(l.x,l.x+s.x),h=Math.min(l.y,l.y+s.y),y=Math.max(l.x,l.x+s.x),v=Math.max(l.y,l.y+s.y),m=n.hw+Math.abs(s.x)/2,u=n.hh+Math.abs(s.y)/2;return{collidable:{hw:m,hh:u},position:_vMath.vMath.vec2(c+(y-c)/2,h+(v-h)/2)}}},{key:"__SweptAABBTest",value:function(e,t,a,o){var i=void 0===arguments[4]?_vMath.vMath.vec2():arguments[4],r=(void 0===arguments[5]?_vMath.vMath.vec2():arguments[5],{type:"swept",xnormal:0,ynormal:0,t:1}),n=void 0,l=void 0,s=void 0,c=void 0;i.x>0?(n=o.x-t.hw-(a.x+e.hw),s=o.x+t.hw-(a.x-e.hw)):(n=o.x+t.hw-(a.x-e.hw),s=o.x-t.hw-(a.x+e.hw)),i.y>0?(l=o.y-t.hh-(a.y+e.hh),c=o.y+t.hh-(a.y-e.hh)):(l=o.y+t.hh-(a.y-e.hh),c=o.y-t.hh-(a.y+e.hh));var h=void 0,y=void 0,v=void 0,m=void 0;0===i.x?(h=-(1/0),v=1/0):(h=n/i.x,v=s/i.x),0===i.y?(y=-(1/0),m=1/0):(y=l/i.y,m=c/i.y);var u=Math.max(h,y),_=Math.min(v,m);return u>_||0>h&&0>y||h>1&&y>1?r:(h>y?0>n&&e.active_faces[LEFT]===!0&&t.active_faces[RIGHT]===!0?(r.t=u,r.xnormal=1,r.ynormal=0):e.active_faces[RIGHT]===!0&&t.active_faces[LEFT]===!0&&(r.t=u,r.xnormal=-1,r.ynormal=0):0>l&&e.active_faces[TOP]===!0&&t.active_faces[BOTTOM]===!0?(r.t=u,r.xnormal=0,r.ynormal=1):e.active_faces[BOTTOM]===!0&&t.active_faces[TOP]===!0&&(r.t=u,r.xnormal=0,r.ynormal=-1),r)}},{key:"__AABBPenetrationTest",value:function(e,t,a,o){var i=e.hw+t.hw,r=e.hh+t.hh,n=_vMath.vMath.sub(o,a),l={type:"discrete",xnormal:0,ynormal:0,depth:0},s=Math.abs(Math.abs(i)-Math.abs(n.x)),c=Math.abs(Math.abs(r)-Math.abs(n.y));return n.x>0&&n.x<i?n.y>0&&n.y<r?c>s&&e.active_faces[RIGHT]===!0&&t.active_faces[LEFT]===!0?(l.xnormal=-1,l.ynormal=0,l.depth=s):e.active_faces[BOTTOM]===!0&&t.active_faces[TOP]===!0&&(l.xnormal=0,l.ynormal=-1,l.depth=c):n.y<0&&n.y>-r&&(c>s&&e.active_faces[RIGHT]===!0&&t.active_faces[LEFT]===!0?(l.xnormal=-1,l.ynormal=0,l.depth=s):e.active_faces[TOP]===!0&&t.active_faces[BOTTOM]===!0&&(l.xnormal=0,l.ynormal=1,l.depth=c)):n.x<0&&n.x>-i&&(n.y>0&&n.y<r?c>s&&e.active_faces[LEFT]===!0&&t.active_faces[RIGHT]===!0?(l.xnormal=1,l.ynormal=0,l.depth=s):e.active_faces[BOTTOM]===!0&&t.active_faces[TOP]===!0&&(l.xnormal=0,l.ynormal=-1,l.depth=c):n.y<0&&n.y>-r&&(c>s&&e.active_faces[LEFT]===!0&&t.active_faces[RIGHT]===!0?(l.xnormal=1,l.ynormal=0,l.depth=s):e.active_faces[TOP]===!0&&t.active_faces[BOTTOM]===!0&&(l.xnormal=0,l.ynormal=1,l.depth=c))),l}},{key:"__AABBBooleanTest",value:function(e,t,a,o){var i={minx:a.x-e.hw,miny:a.y-e.hh,maxx:a.x+e.hw,maxy:a.y+e.hh},r={minx:o.x-t.hw,miny:o.y-t.hh,maxx:o.x+t.hw,maxy:o.y+t.hh};return i.minx<r.maxx&&i.maxx>r.minx&&i.miny<r.maxy&&i.maxy>r.miny}}]),t}(_GameSystem3["default"]);exports["default"]=CollisionDetectionSystem,module.exports=exports["default"];

},{"./collisionresolution.js":5,"./component.js":6,"./system.js":23,"./utils.js":25}],5:[function(require,module,exports){
"use strict";function resolveSweptAABB(e,t,r){var o=_Registry.Registry.getFlag("collidable"),i=_Registry.Registry.getFlag("position"),l=_Registry.Registry.getFlag("movable"),a=(e.get(o),e.get(i)),s=e.get(l),v=vMath.vec2(t.xnormal,t.ynormal),y=vMath.mul(s.velocity,r/1e3);if(!(vMath.dot(s.velocity,v)>0)){a.x+=y.x*t.t,a.y+=y.y*t.t;1-t.t;s.velocity=vMath.v_rej(s.velocity,v),0===t.xnormal&&-1===t.ynormal&&(s.__onground=!0)}}function resolveDiscreteAABB(e,t){var r=_Registry.Registry.getFlag("position"),o=_Registry.Registry.getFlag("movable"),i=e.get(r),l=vMath.vec2(t.xnormal,t.ynormal),a=e.get(o);vMath.dot(a.velocity,l)>0||(i.x+=t.xnormal*t.depth,i.y+=t.ynormal*t.depth,a.velocity=vMath.v_rej(a.velocity,l),0===t.xnormal&&-1===t.ynormal&&(a.__onground=!0))}var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}};Object.defineProperty(exports,"__esModule",{value:!0});var _GameSystem=require("./system.js"),_GameSystem2=_interopRequireWildcard(_GameSystem),_Registry=require("./component.js"),uid=0;exports.resolveSweptAABB=resolveSweptAABB,exports.resolveDiscreteAABB=resolveDiscreteAABB;

},{"./component.js":6,"./system.js":23}],6:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var Registry=Object.defineProperties({__next_flag:1,__flags:{},getFlag:function(e){return this.__flags[e]||(this.__flags[e]=this.__next_flag,this.__next_flag=this.__next_flag<<1),this.__flags[e]}},{flags:{get:function(){return this.__flags},configurable:!0,enumerable:!0}}),Component=function(){function e(){var t=void 0===arguments[0]?"component_"+Date.now().toString():arguments[0],n=void 0===arguments[1]?null:arguments[1];_classCallCheck(this,e),this._flag=Registry.getFlag(n),this._name=t,this._id=Symbol(this._name)}return _createClass(e,[{key:"flag",get:function(){return this._flag}},{key:"name",get:function(){return this._name}},{key:"id",get:function(){return this._id}}]),e}();exports.Component=Component,exports.Registry=Registry;

},{}],7:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_get=function e(t,r,o){var n=Object.getOwnPropertyDescriptor(t,r);if(void 0===n){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,r,o)}if("value"in n)return n.value;var a=n.get;return void 0===a?void 0:a.call(o)},_inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)};Object.defineProperty(exports,"__esModule",{value:!0});var _GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),_Registry=require("./component.js"),uid=0,PlayerControllerSystem=function(e){function t(){var e=void 0===arguments[0]?"playercontroller"+uid++:arguments[0];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,["state","movable","animatable"])}return _inherits(t,e),_createClass(t,[{key:"update",value:function(e,r){var o=_Registry.Registry.getFlag("state"),n=_Registry.Registry.getFlag("movable"),i=_Registry.Registry.getFlag("animatable");e.each(function(e){var r=e.get(o),a=e.get(n),l=e.get(i),u=r.xmotion;"idle"===u?a.velocity.x=0:"walkleft"===u?(a.velocity.x=-400,a.facing=-1):"walkright"===u&&(a.velocity.x=400,a.facing=1);var c=r.ymotion;"ground"===c||"jump"===c&&(a.__onground=!1,a.velocity.y=-1e3),t.resolveAnimation(r,a,l)},this.lock)}}],[{key:"resolveAnimation",value:function(e,t,r){var o=e.xmotion,n=e.ymotion,i=void 0;i="ground"===n?"idle"===o?"idle":"walk":"jump",i+=1===t.facing?"right":"left",r.current=i}}]),t}(_GameSystem3["default"]);exports["default"]=PlayerControllerSystem,module.exports=exports["default"];

},{"./component.js":6,"./system.js":23}],8:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var _Registry=require("./component.js"),Entity=function(){function e(){var t=this,n=void 0===arguments[0]?"entity_"+Date.now().toString():arguments[0],r=void 0===arguments[1]?[]:arguments[1];_classCallCheck(this,e),this._name=n,this._id=Symbol(this.name),this._key=0,this._components={},r.forEach(function(e){return t.add(e)})}return _createClass(e,[{key:"name",get:function(){return this._name}},{key:"id",get:function(){return this._id}},{key:"key",get:function(){return this._key}},{key:"add",value:function(e){var t=e.flag;this._components[t]=e,this._key|=t}},{key:"get",value:function(e){return this._components[e]}},{key:"has",value:function(e){return(this.key&e)===e}},{key:"remove",value:function(e){var t=e.flag;e.c_id;this._components[t]&&(delete this._components[t],this._key&=~t)}}]),e}();exports["default"]=Entity,module.exports=exports["default"];

},{"./component.js":6}],9:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var s=0;s<t.length;s++){var i=t[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,s,i){return s&&e(t.prototype,s),i&&e(t,i),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var _Entity=require("./entity.js"),_Entity2=_interopRequireWildcard(_Entity),_WebGLRenderer=require("./render.js"),_WebGLRenderer2=_interopRequireWildcard(_WebGLRenderer),_ResourceManager=require("./resource.js"),_ResourceManager2=_interopRequireWildcard(_ResourceManager),_Interface=require("./interface.js"),_Interface2=_interopRequireWildcard(_Interface),_rAF$cRAF$vec2=require("./utils.js"),_default=function(){var e=function(t){var s=this,i=t.canvasSelector,n=t.shaders,r=t.resolution,_=(t.resources,t.sprites,t.render),a=(t.audio,t.event,t.phases),c=t.systems;_classCallCheck(this,e);var u=function(){var e=void 0===arguments[0]?"":arguments[0];return document.querySelector(e)};this.canvas=u(i),this.__loaded=!1,this.__resources_loaded=function(){},this.__user_defined_step=function(){},this.__user_persist={},this.__scenes={},this.activeScene=null,this.__last_time=0,this.__input=new _Interface2["default"](window,_rAF$cRAF$vec2.vec2(this.canvas.offsetLeft,this.canvas.offsetTop)),_||(this.render=_||new _WebGLRenderer2["default"](void 0,{el:this.canvas,shaders:n,resolution:r}),!this.render.success),this.__pipeline=Promise.resolve({}),this.__phaseorder=a||[],this.__phases={},this.__phaseorder.forEach(function(e){return s.__phases[e]=c[e]||[]})};return _createClass(e,[{key:"scenes",get:function(){return this.__scenes}},{key:"input",get:function(){return this.__input}},{key:"resource",value:function(e){return this.__pipeline=this.__pipeline.then(function(){return _ResourceManager2["default"].loadResources(e)})["catch"](function(e){return console.error("Error loading resource: "+e)}),this}},{key:"ready",value:function(e){var t=this;return this.__pipeline=this.__pipeline.then(e.bind(this)).then(function(){t.__loaded=!0})["catch"](function(e){console.error(e)}),this}},{key:"then",value:function(e){return this.__pipeline=this.__pipeline.then(e.bind(this)),this}},{key:"catch",value:function(e){return this.__pipeline=this.__pipeline["catch"](e.bind(this)),this}},{key:"__updateSystems",value:function(e){var t=this;this.__input.process(),this.activeScene&&!function(){var s=t.activeScene;t.__phaseorder.forEach(function(i){var n=t.__phases[i];n.forEach(function(t){return t.update(s,e)})}),t.render.update(s,e)}()}},{key:"__tick",value:function(e){0===this.__last_time&&(this.__last_time=e);var t=e-this.__last_time;this.__loaded&&(this.__updateSystems(t),this.__user_persist=this.__user_defined_step(t,this.__user_persist)),this.__last_time=e,this.__raf_id=_rAF$cRAF$vec2.rAF(this.__tick.bind(this))}},{key:"step",value:function(e){return this.__user_defined_step=e.bind(this),this}},{key:"run",value:function(){return console.log("run"),this.__tick(0),this}},{key:"stop",value:function(){return _rAF$cRAF$vec2.cRAF(this.__raf_id),this}},{key:"addScene",value:function(e){this.__scenes[e.id]=e}},{key:"removeScene",value:function(e){this.__scenes[e]?delete this.__scenes[e]:this.__scenes[e.id]&&delete this.__scenes[e.id]}},{key:"loadScene",value:function(e){this.__scenes[e]?this.activeScene=this.__scenes[e]:this.__scenes[e.id]&&(this.activeScene=this.__scenes[e.id]),this.activeScene.__inputstate=this.input}},{key:"addPhase",value:function(e,t){this.__phaseorder.splice(t,0,e),this.__phases[e]=[]}},{key:"addSystem",value:function(e,t){this.__phases[t]&&this.__phases[t].push(e)}}]),e}();exports["default"]=_default,module.exports=exports["default"];

},{"./entity.js":8,"./interface.js":10,"./render.js":15,"./resource.js":17,"./utils.js":25}],10:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var s=0;s<t.length;s++){var n=t[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,s,n){return s&&e(t.prototype,s),n&&e(t,n),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var _vMath=require("./utils.js"),Interface=function(){function e(t){var s=void 0===arguments[1]?_vMath.vMath.vec2():arguments[1],n=void 0===arguments[2]?["mousedown","mouseup","mousemove","keydown","keyup"]:arguments[2];_classCallCheck(this,e),this.__window=t,this.__event_queue=[],this.__key_state={},this.__mouse_state={lmb:0,mmb:0,rmb:0,pos:_vMath.vMath.vec2()},this.__canvas_offset=s,n.forEach(this._bindEvent.bind(this))}return _createClass(e,[{key:"mouse",get:function(){return this.__mouse_state}},{key:"key",get:function(){return this.__key_state}},{key:"_listener",value:function(e){this.__event_queue.push(e)}},{key:"_bindEvent",value:function(e){this.__window.addEventListener(e,this._listener.bind(this))}},{key:"process",value:function(){for(var e=void 0;this.__event_queue.length;)e=this.__event_queue.splice(0,1)[0],"mousedown"===e.type||"mouseup"===e.type||"mousemove"===e.type?this.handleMouseEvent(e):("keydown"===e.type||"keyup"===e.type)&&this.handleKeyEvent(e)}},{key:"handleMouseEvent",value:function(e){var t=_vMath.vMath.sub,s=_vMath.vMath.vec2;if("mousemove"===e.type)this.__mouse_state.pos=t(s(e.clientX,e.clientY),this.__canvas_offset);else{var n=-1;if("mousedown"===e.type)n=1;else{if("mouseup"!==e.type)return;n=0}0===e.button?this.__mouse_state.lmb=n:1===e.button?this.__mouse_state.mmb=n:2===e.button&&(this.__mouse_state.rmb=n)}}},{key:"handleKeyEvent",value:function(e){var t="";t=e.key?e.key:String.fromCharCode(e.keyCode).toLowerCase();var s=this.__key_state[t];if("keydown"!==e.type||s){if("keyup"!==e.type)return;s=0}else s=e.timeStamp;this.__key_state[t]=s}}]),e}();exports["default"]=Interface,module.exports=exports["default"];

},{"./utils.js":25}],11:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_Game=require("./game.js"),_Game2=_interopRequireWildcard(_Game),_Registry=require("./component.js"),_RenderableSolidRect$RenderableTexturedRect=require("./renderable.js"),_Position=require("./position.js"),_Position2=_interopRequireWildcard(_Position),_vMath$mMath$color=require("./utils.js"),_solid_rect_shaders=require("./shaders/solidrect.glsl.js"),_solid_rect_shaders2=_interopRequireWildcard(_solid_rect_shaders),_textured_rect_shaders=require("./shaders/texrect.glsl.js"),_textured_rect_shaders2=_interopRequireWildcard(_textured_rect_shaders),_Scene=require("./scene.js"),_Scene2=_interopRequireWildcard(_Scene),_Entity=require("./entity.js"),_Entity2=_interopRequireWildcard(_Entity),_PhysicsSystem$Movable=require("./physics.js"),_XMotionStateManager$YMotionStateManager$Stateful=require("./state.js"),_CollisionDetectionSystem=require("./collisiondetection.js"),_CollisionDetectionSystem2=_interopRequireWildcard(_CollisionDetectionSystem),_CollisionResolutionSystem=require("./collisionresolution.js"),_CollisionResolutionSystem2=_interopRequireWildcard(_CollisionResolutionSystem),_AABBCollidable=require("./collidable.js"),_AABBCollidable2=_interopRequireWildcard(_AABBCollidable),_Map=require("./map.js"),_Map2=_interopRequireWildcard(_Map),_SpriteLoader=require("./sprite.js"),_SpriteLoader2=_interopRequireWildcard(_SpriteLoader),_Animatable$AnimationSystem$Animation=require("./animation.js"),_PlayerControllerSystem=require("./controller.js"),_PlayerControllerSystem2=_interopRequireWildcard(_PlayerControllerSystem),canvas=document.querySelector("#screen"),entities=[],s=null,shaders={solid_rect:_solid_rect_shaders2["default"],textured_rect:_textured_rect_shaders2["default"]},twidth=64,theight=64;window.g=new _Game2["default"]({canvasSelector:"#screen",resolution:{width:canvas.clientWidth,height:canvas.clientHeight},phases:["state","collision","physics","draw"],systems:{state:[new _XMotionStateManager$YMotionStateManager$Stateful.XMotionStateManager,new _XMotionStateManager$YMotionStateManager$Stateful.YMotionStateManager],physics:[new _PlayerControllerSystem2["default"],new _PhysicsSystem$Movable.PhysicsSystem,new _CollisionDetectionSystem2["default"]],draw:[new _Animatable$AnimationSystem$Animation.AnimationSystem]}}).resource({player_data:{type:"json",path:"assets/json/player.json"},player_sheet:{type:"image",path:"assets/img/player.png"},map_tile_data:{type:"json",path:"assets/json/maptiles.json"},map_tile_sheet:{type:"image",path:"assets/img/map.png"},map_layout_data:{type:"json",path:"assets/json/map0.json"},texturedrect_vert_shader:{type:"shader",path:"assets/shaders/texturedrect/vertex.glsl"},texturedrect_frag_shader:{type:"shader",path:"assets/shaders/texturedrect/fragment.glsl"},solidrect_vert_shader:{type:"shader",path:"assets/shaders/solidrect/vertex.glsl"},solidrect_frag_shader:{type:"shader",path:"assets/shaders/solidrect/fragment.glsl"}}).then(function(e){return this.render.addShader("solid_rect",{fragment:e.shader.solidrect_frag_shader,vertex:e.shader.solidrect_vert_shader},["vertices","color"],["uPMatrix","uMVMatrix"],["aVertexPosition","aVertexColor"]),this.render.addShader("textured_rect",{fragment:e.shader.texturedrect_frag_shader,vertex:e.shader.texturedrect_vert_shader},["vertices","texture"],["uPMatrix","uMVMatrix","uSampler","uAlpha"],["aVertexPosition","aTextureCoord"]),e})["catch"](function(e){console.error("Error compiling shaders: "+e)}).then(function(e){var t={map:{texture:e.image.map_tile_sheet,sheet:e.json.map_tile_data},jetroid:{texture:e.image.player_sheet,sheet:e.json.player_data}};return e.sprites=_SpriteLoader2["default"](e.image,t),e})["catch"](function(e){console.error("error: "+e)}).then(function(e){var t=e.sprites,a={},i={};for(var r in t.jetroid)if(t.jetroid.hasOwnProperty(r)){var n=t.jetroid[r];a[r]=new _RenderableSolidRect$RenderableTexturedRect.RenderableTexturedRect(r,32,32,n)}var s=[a.idle0,a.idle1,a.idle2,a.idle3,a.idle4,a.idle5,a.idle6,a.idle7,a.idle8,a.idle9],o=[a.walk0,a.walk1,a.walk2,a.walk3,a.walk4,a.walk5,a.walk6,a.walk7],l=[a.jump0,a.jump1,a.jump2,a.jump3,a.jump4];return i.idleleft=new _Animatable$AnimationSystem$Animation.Animation(s,15,!0,_vMath$mMath$color.mMath.flipx()),i.idleright=new _Animatable$AnimationSystem$Animation.Animation(s,15,!0),i.walkleft=new _Animatable$AnimationSystem$Animation.Animation(o,15,!0,_vMath$mMath$color.mMath.flipx()),i.walkright=new _Animatable$AnimationSystem$Animation.Animation(o,15,!0),i.jumpleft=new _Animatable$AnimationSystem$Animation.Animation(l,15,!1,_vMath$mMath$color.mMath.flipx()),i.jumpright=new _Animatable$AnimationSystem$Animation.Animation(l,15,!1),e.animations=i,e}).ready(function(e){var t=e.sprites,a=_vMath$mMath$color.vMath.vec2,i=_vMath$mMath$color.vMath.vec3;entities.push(new _Entity2["default"]("blackrect",[new _RenderableSolidRect$RenderableTexturedRect.RenderableSolidRect("rect2",20,20),new _Position2["default"]("pos2",i(50,50))])),entities.push(new _Entity2["default"]("man",[new _Animatable$AnimationSystem$Animation.Animatable("player",{idleleft:e.animations.idleleft,idleright:e.animations.idleright,walkleft:e.animations.walkleft,walkright:e.animations.walkright,jumpleft:e.animations.jumpleft,jumpright:e.animations.jumpright},"idleright"),new _Position2["default"]("pos3",i(83,450)),new _PhysicsSystem$Movable.Movable("mov1",a(0,0),void 0,10),new _AABBCollidable2["default"]("man_collider",32,32),new _XMotionStateManager$YMotionStateManager$Stateful.Stateful("playerstate",{xmotion:"idle",ymotion:"inair"})]));var r=new _Map2["default"](t.map,a(25,25),e.json.map_layout_data.data,e.image.map_tile_sheet);s=new _Scene2["default"]("scene1",entities,r),this.addScene(s),this.loadScene(s),window.map=r,window.vMath=_vMath$mMath$color.vMath,window.mMath=_vMath$mMath$color.mMath}).step(function(e,t){var a=_Registry.Registry.getFlag("position"),i=(_Registry.Registry.getFlag("movable"),_Registry.Registry.getFlag("renderable"),_Registry.Registry.getFlag("state"),this.input.mouse.pos),r=entities[0].get(a);return r.x=i.x,r.y=i.y,t}).run();

},{"./animation.js":2,"./collidable.js":3,"./collisiondetection.js":4,"./collisionresolution.js":5,"./component.js":6,"./controller.js":7,"./entity.js":8,"./game.js":9,"./map.js":12,"./physics.js":13,"./position.js":14,"./renderable.js":16,"./scene.js":18,"./shaders/solidrect.glsl.js":19,"./shaders/texrect.glsl.js":20,"./sprite.js":21,"./state.js":22,"./utils.js":25}],12:[function(require,module,exports){
"use strict";function processTiles(e,r){var t={};for(var l in e)if(e.hasOwnProperty(l)){if(0===l){console.error("Tile id 0 is reserved");continue}var i=e[l];t[l]=new _RenderableTexturedRect.RenderableTexturedRect(l,r.x,r.y,i)}return t}function processMap(e){var r=[],t=[],l=!0,i=!1,a=void 0;try{for(var n,s=e[Symbol.iterator]();!(l=(n=s.next()).done);l=!0){for(var o=n.value,u=[],d=[],c=0;c<o.data.length;c+=1){for(var h=o.data[c],f=[],p=[],v=0;v<h.length;v+=1){var _=h[v];if(o.collidable){var b=o.data,y=[!(c>0&&b[c-1][v]),!(v<b[c].length-1&&b[c][v+1]),!(c<b.length-1&&b[c+1][v]),!(v>0&&b[c][v-1])];f.push(_?y:!1)}p.push(_)}o.collidable&&u.push(f),d.push(p)}r.push(u),t.push(d)}}catch(x){i=!0,a=x}finally{try{!l&&s["return"]&&s["return"]()}finally{if(i)throw a}}return{collision:r,render:t}}function generateLayerRenderArrays(e,r,t,l){for(var i=e.length,a=e[0].length,n=new Float32Array(i*a*30),s=0,o=0;o<e.length;o+=1)for(var u=0;u<e[o].length;u+=1){var d=e[o][u];if(0!==d){var c=r[d],h=u*t,f=(u+1)*t,p=o*l,v=(o+1)*l,_=n,b=s;if(c){var y=c.sprite.coords;_[b]=h,_[b+1]=p,_[b+2]=0,_[b+3]=y[0],_[b+4]=y[1],_[b+5]=f,_[b+5+1]=p,_[b+5+2]=0,_[b+5+3]=y[2],_[b+5+4]=y[3],_[b+10]=h,_[b+10+1]=v,_[b+10+2]=0,_[b+10+3]=y[4],_[b+10+4]=y[5],_[b+15]=h,_[b+15+1]=v,_[b+15+2]=0,_[b+15+3]=y[4],_[b+15+4]=y[5],_[b+20]=f,_[b+20+1]=p,_[b+20+2]=0,_[b+20+3]=y[2],_[b+20+4]=y[3],_[b+25]=f,_[b+25+1]=v,_[b+25+2]=0,_[b+25+3]=y[6],_[b+25+4]=y[7]}s+=30}}return{vertex:n}}var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")};Object.defineProperty(exports,"__esModule",{value:!0});var _RenderableTexturedRect=require("./renderable.js"),_AABBCollidable=require("./collidable.js"),_AABBCollidable2=_interopRequireWildcard(_AABBCollidable),_vMath=require("./utils.js"),Map=function e(r,t,l,i){var a=this;_classCallCheck(this,e),this.__collidable=new _AABBCollidable2["default"]("maptile",t.x,t.y);var n=processMap(l),s=n.collision,o=n.render;this.collision=s,this.render=o,this.tilewidth=2*t.x,this.tileheight=2*t.y,this.tiles=processTiles(r,t),this.texture={source:i,gl_texture_id:-1,initialized:!1},this.buffers=[],l.forEach(function(e){var r=generateLayerRenderArrays(e.data,a.tiles,a.tilewidth,a.tileheight);a.buffers.push(r)})};exports["default"]=Map,module.exports=exports["default"];

},{"./collidable.js":3,"./renderable.js":16,"./utils.js":25}],13:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(e){return e&&e.__esModule?e:{"default":e}},_classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,r,o){return r&&e(t.prototype,r),o&&e(t,o),t}}(),_get=function e(t,r,o){var n=Object.getOwnPropertyDescriptor(t,r);if(void 0===n){var i=Object.getPrototypeOf(t);return null===i?void 0:e(i,r,o)}if("value"in n)return n.value;var a=n.get;return void 0===a?void 0:a.call(o)},_inherits=function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(e.__proto__=t)};Object.defineProperty(exports,"__esModule",{value:!0});var _vMath=require("./utils.js"),_GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),_Component2=require("./component.js"),uid=0,PhysicsSystem=function(e){function t(){var e=void 0===arguments[0]?"physics"+uid++:arguments[0];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,["position","movable"])}return _inherits(t,e),_createClass(t,[{key:"update",value:function(e,t){var r=this,o=t/1e3;e.each(function(e){var t=e.get(r.__flags.movable),n=e.get(r.__flags.position),i=t.velocity,a=i.x,s=i.y,c=t.acceleration;c.x,c.y;if(n.x+=a*o,n.y+=s*o,t.mass&&!t.__onground){var u=_vMath.vMath.vec2(0,2600);t.velocity.x+=u.x*o,t.velocity.y+=u.y*o}else t.__onground=!1},this.lock)}}]),t}(_GameSystem3["default"]),Movable=function(e){function t(e){var r=void 0===arguments[1]?_vMath.vMath.vec2():arguments[1],o=void 0===arguments[2]?_vMath.vMath.vec2():arguments[2],n=void 0===arguments[3]?0:arguments[3];_classCallCheck(this,t),_get(Object.getPrototypeOf(t.prototype),"constructor",this).call(this,e,"movable"),this.velocity=r,this.acceleration=o,this.mass=n,this.facing=1,this.__onground=!1}return _inherits(t,e),t}(_Component2.Component);exports.PhysicsSystem=PhysicsSystem,exports.Movable=Movable;

},{"./component.js":6,"./system.js":23,"./utils.js":25}],14:[function(require,module,exports){
"use strict";var _classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},_get=function t(e,o,r){var n=Object.getOwnPropertyDescriptor(e,o);if(void 0===n){var i=Object.getPrototypeOf(e);return null===i?void 0:t(i,o,r)}if("value"in n)return n.value;var s=n.get;return void 0===s?void 0:s.call(r)},_inherits=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(t.__proto__=e)};Object.defineProperty(exports,"__esModule",{value:!0});var _vec2=require("./utils.js"),_Component2=require("./component.js"),Position=function(t){function e(t){var o=void 0===arguments[1]?0:arguments[1],r=void 0===arguments[2]?0:arguments[2],n=void 0===arguments[3]?0:arguments[3];_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,"position"),o.y?(this.x=o.x,this.y=o.y,this.z=o.z):(this.x=o,this.y=r,this.z=n)}return _inherits(e,t),e}(_Component2.Component);exports["default"]=Position,module.exports=exports["default"];

},{"./component.js":6,"./utils.js":25}],15:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(t){return t&&t.__esModule?t:{"default":t}},_classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function t(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,r,i){return r&&t(e.prototype,r),i&&t(e,i),e}}(),_get=function t(e,r,i){var a=Object.getOwnPropertyDescriptor(e,r);if(void 0===a){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,r,i)}if("value"in a)return a.value;var n=a.get;return void 0===n?void 0:n.call(i)},_inherits=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(t.__proto__=e)};Object.defineProperty(exports,"__esModule",{value:!0});var _Component$Registry=require("./component.js"),_vMath$mMath$color=require("./utils.js"),_GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),floor=Math.floor,uid=0,WebGLRenderer=function(t){function e(){var t=void 0===arguments[0]?"webglrenderer"+uid++:arguments[0],r=void 0===arguments[1]?{}:arguments[1];if(_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,["renderable","position"]),r.el&&r.resolution){var i=r.el,a=r.shaders,o=r.resolution;i.style.width=""+o.width+"px",i.style.height=""+o.height+"px";var n=window.devicePixelRatio||1;i.width=o.width*n,i.height=o.height*n,this._resolution=_vMath$mMath$color.vMath.vec3(o.width,o.height,1);try{this._ctx=i.getContext("webgl",{})||i.getContext("experimental-webgl",{})}catch(s){console.error(s)}if(!this._ctx)return void(this.success=!1);this.success=!0;var u=this._ctx;u&&(u.clearColor(1,0,1,1),u.disable(u.DEPTH_TEST),u.enable(u.BLEND),u.blendFunc(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA),u.depthFunc(u.LEQUAL),u.clear(u.COLOR_BUFFER_BIT|u.DEPTH_BUFFER_BIT)),this._textures=[],this._texture_dict={},this._shaders={};for(var l in a)a.hasOwnProperty(l)&&(this._shaders[l]=this._initShaderProgram(a[l]));this._ctx.viewport(0,0,this._resolution.x*n,this._resolution.y*n)}}return _inherits(e,t),_createClass(e,[{key:"addShader",value:function(t,e,r,i,a){this._shaders[t]=this._initShaderProgram({fragment_source:e.fragment,vertex_source:e.vertex,buffers:r,uniforms:i,attributes:a})}},{key:"_initShader",value:function(t,e){var r=this.ctx,i=void 0;return i=r.createShader(t),r.shaderSource(i,e),r.compileShader(i),r.getShaderParameter(i,r.COMPILE_STATUS)?i:(console.error("Error compiling shader: "+r.getShaderInfoLog(i)+". "),null)}},{key:"_initShaderProgram",value:function(t){var e=this.ctx,r=t.fragment_source,i=t.vertex_source,a=t.buffers,o=t.uniforms,n=t.attributes,s=this._initShader(e.FRAGMENT_SHADER,r),u=this._initShader(e.VERTEX_SHADER,i),l=e.createProgram(),h={},c={},_={};return a.forEach(function(t){h[t]=e.createBuffer()}),e.attachShader(l,s),e.attachShader(l,u),e.linkProgram(l),e.getProgramParameter(l,e.LINK_STATUS)||console.error("Error linking shader program. "),o.forEach(function(t){c[t]=e.getUniformLocation(l,t)}),n.forEach(function(t){_[t]=e.getAttribLocation(l,t)}),{program:l,buffers:h,uniforms:c,attribs:_}}},{key:"_initTexture",value:function(t){var e=void 0!==this._texture_dict[t.src]?this._texture_dict[t.src]:this._textures.length;if(e===this._textures.length){this._texture_dict[t.src]=e;var r=this.ctx,i=r.createTexture();r.bindTexture(r.TEXTURE_2D,i),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR_MIPMAP_NEAREST),r.generateMipmap(r.TEXTURE_2D),r.bindTexture(r.TEXTURE_2D,null),this._textures[e]=i}return e}},{key:"ctx",get:function(){return this._ctx}},{key:"update",value:function(t,e){var r=this;this.clear(),t.map&&this.drawMap(t.map),t.all(function(t){var e=r._sortRenderablesByTexture(t);r._drawRenderablesByTexture(e)},this.lock)}},{key:"clear",value:function(){this.ctx.clear(this.ctx.COLOR_BUFFER_BIT|this.ctx.DEPTH_BUFFER_BIT)}},{key:"draw",value:function(t){var e=void 0===arguments[1]?_vMath$mMath$color.vMath.vec3():arguments[1],r=void 0===arguments[2]?{}:arguments[2],i=_vMath$mMath$color.mMath.orthographic(0,this._resolution.x,this._resolution.y,0,0,10),a=_vMath$mMath$color.mMath.compose().translate(e);r.rotate&&a.rotate(r.rotate),r.scale&&a.scale(r.scale);var o=new Float32Array(_vMath$mMath$color.mMath.flatten(i)),n=new Float32Array(_vMath$mMath$color.mMath.flatten(a.done()));"solidrect"===t.type?this._drawSolidRect(t,o,n):"texturedrect"===t.type&&this._drawTexturedRect(t,o,n)}},{key:"drawMap",value:function(t){var e=this.ctx,r=this._shaders.textured_rect;t.texture.initialized===!1&&(t.texture.gl_texture_id=this._initTexture(t.texture.source.img),t.texture.initialized=!0),e.useProgram(r.program);var i=r.attribs.aVertexPosition,a=r.attribs.aTextureCoord,o=r.uniforms.uPMatrix,n=r.uniforms.uMVMatrix,s=r.uniforms.uSampler,u=r.uniforms.uAlpha,l=r.buffers.vertices,h=_vMath$mMath$color.mMath.orthographic(0,this._resolution.x,this._resolution.y,0,0,10),c=new Float32Array(_vMath$mMath$color.mMath.flatten(h)),_=new Float32Array(_vMath$mMath$color.mMath.flatten(_vMath$mMath$color.mMath.compose().done()));e.uniformMatrix4fv(o,!1,c),e.uniformMatrix4fv(n,!1,_),e.enableVertexAttribArray(i),e.enableVertexAttribArray(a),e.bindTexture(e.TEXTURE_2D,this._textures[t.texture.gl_texture_id]),e.uniform1i(s,0),e.uniform1f(u,1),e.bindBuffer(e.ARRAY_BUFFER,l),e.vertexAttribPointer(i,3,e.FLOAT,!1,20,0),e.vertexAttribPointer(a,2,e.FLOAT,!1,20,12),t.buffers.forEach(function(t){var r=t.vertex;e.bufferData(e.ARRAY_BUFFER,r,e.STATIC_DRAW),e.drawArrays(e.TRIANGLES,0,r.length/5)})}},{key:"_sortRenderablesByTexture",value:function(t){var e=_Component$Registry.Registry.getFlag("renderable"),r={};for(var i in t)if(t.hasOwnProperty(i)){var a=t[i],o=a.get(e);o.initialized===!1&&(o.gl_texture_id=this._initTexture(o.sprite.texture.img),o.initialized=!0);var n=o.gl_texture_id;void 0===n&&(n="none"),r[n]=r[n]||{texture_id:n,entities:[]},r[n].entities.push(a)}return r}},{key:"_drawRenderablesByTexture",value:function(t){var e=this,r=void 0===arguments[1]?{}:arguments[1],i=this.ctx,a=this._shaders.textured_rect;i.useProgram(a.program);var o=a.attribs.aVertexPosition,n=a.attribs.aTextureCoord,s=a.buffers.texture,u=a.buffers.vertices,l=a.uniforms.uPMatrix,h=a.uniforms.uMVMatrix,c=a.uniforms.uSampler,_=a.uniforms.uAlpha,f=_Component$Registry.Registry.getFlag("renderable"),d=_Component$Registry.Registry.getFlag("position"),m=_vMath$mMath$color.mMath.orthographic(0,this._resolution.x,this._resolution.y,0,0,10),x=new Float32Array(_vMath$mMath$color.mMath.flatten(m));i.enableVertexAttribArray(o),i.enableVertexAttribArray(n),i.uniformMatrix4fv(l,!1,x);for(var v in t)if(t.hasOwnProperty(v)){var A=t[v],R=A.texture_id,b=A.entities;if("none"===R){b.forEach(function(t){var r=t.get(f),i=t.get(d);e.draw(r,i)});continue}i.bindTexture(i.TEXTURE_2D,this._textures[R]),i.uniform1i(c,0),b.forEach(function(t){var e=t.get(d),a=t.get(f),l=a.sprite.coords,c=a.verts,m=_vMath$mMath$color.mMath.compose().translate(e).mul(a.transform);r.rotate&&m.rotate(r.rotate),r.scale&&m.scale(r.scale);var x=new Float32Array(_vMath$mMath$color.mMath.flatten(m.done()));i.uniformMatrix4fv(h,!1,x),i.uniform1f(_,a.opacity),i.bindBuffer(i.ARRAY_BUFFER,s),i.bufferData(i.ARRAY_BUFFER,l,i.STATIC_DRAW),i.vertexAttribPointer(n,2,i.FLOAT,!1,0,0),i.bindBuffer(i.ARRAY_BUFFER,u),i.bufferData(i.ARRAY_BUFFER,c,i.STATIC_DRAW),i.vertexAttribPointer(o,3,i.FLOAT,!1,0,0),i.drawArrays(i.TRIANGLE_STRIP,0,4)})}}},{key:"_drawSolidRect",value:function(t,e,r){var i=t.color,a=t.verts,o=this.ctx,n=this._shaders.solid_rect;o.useProgram(n.program);var s=n.attribs.aVertexPosition,u=n.attribs.aVertexColor,l=n.uniforms.uPMatrix,h=n.uniforms.uMVMatrix;o.enableVertexAttribArray(s),o.enableVertexAttribArray(u);var c=n.buffers.vertices;o.bindBuffer(o.ARRAY_BUFFER,c),o.bufferData(o.ARRAY_BUFFER,a,o.STATIC_DRAW),o.vertexAttribPointer(s,3,o.FLOAT,!1,0,0);var _=n.buffers.color;o.bindBuffer(o.ARRAY_BUFFER,_),o.bufferData(o.ARRAY_BUFFER,i,o.STATIC_DRAW),o.vertexAttribPointer(u,4,o.FLOAT,!1,0,0),o.uniformMatrix4fv(l,!1,e),o.uniformMatrix4fv(h,!1,r),o.drawArrays(o.TRIANGLE_STRIP,0,4)}},{key:"_drawTexturedRect",value:function(t,e,r){t.initialized===!1&&(t.gl_texture_id=this._initTexture(t.sprite.texture.img),t.initialized=!0);var i=this.ctx,a=this._shaders.textured_rect,o=t.gl_texture_id,n=t.verts,s=t.sprite.coords,u=this._textures[o];i.activeTexture(i.TEXTURE0),i.bindTexture(i.TEXTURE_2D,u),i.useProgram(a.program);var l=a.attribs.aVertexPosition,h=a.attribs.aTextureCoord,c=a.uniforms.uPMatrix,_=a.uniforms.uMVMatrix,f=a.uniforms.uSampler,d=a.uniforms.uAlpha;i.enableVertexAttribArray(l),i.enableVertexAttribArray(h);var m=a.buffers.texture;i.bindBuffer(i.ARRAY_BUFFER,m),i.bufferData(i.ARRAY_BUFFER,s,i.STATIC_DRAW),i.vertexAttribPointer(h,2,i.FLOAT,!1,0,0);var x=a.buffers.vertices;i.bindBuffer(i.ARRAY_BUFFER,x),i.bufferData(i.ARRAY_BUFFER,n,i.STATIC_DRAW),i.vertexAttribPointer(l,3,i.FLOAT,!1,0,0),i.uniformMatrix4fv(c,!1,e),i.uniformMatrix4fv(_,!1,r),i.uniform1i(f,0),i.uniform1f(d,t.opacity),i.drawArrays(i.TRIANGLE_STRIP,0,4)}}]),e}(_GameSystem3["default"]);exports["default"]=WebGLRenderer,module.exports=exports["default"];

},{"./component.js":6,"./system.js":23,"./utils.js":25}],16:[function(require,module,exports){
"use strict";var _toConsumableArray=function(t){if(Array.isArray(t)){for(var r=0,e=Array(t.length);r<t.length;r++)e[r]=t[r];return e}return Array.from(t)},_classCallCheck=function(t,r){if(!(t instanceof r))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function t(t,r){for(var e=0;e<r.length;e++){var o=r[e];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(r,e,o){return e&&t(r.prototype,e),o&&t(r,o),r}}(),_get=function t(r,e,o){var n=Object.getOwnPropertyDescriptor(r,e);if(void 0===n){var i=Object.getPrototypeOf(r);return null===i?void 0:t(i,e,o)}if("value"in n)return n.value;var a=n.get;return void 0===a?void 0:a.call(o)},_inherits=function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function, not "+typeof r);t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),r&&(t.__proto__=r)};Object.defineProperty(exports,"__esModule",{value:!0});var _vMath$color$mMath=require("./utils.js"),_Component4=require("./component.js"),RenderableSolidRect=function(t){function r(t){for(var e=arguments.length,o=Array(e>1?e-1:0),n=1;e>n;n++)o[n-1]=arguments[n];_classCallCheck(this,r),_get(Object.getPrototypeOf(r.prototype),"constructor",this).call(this,t,"renderable");var i=o[0],a=void 0===i?0:i,s=o[1],l=void 0===s?0:s,u=o[2],c=void 0===u?_vMath$color$mMath.color():u,h=o[3],g=void 0===h?_vMath$color$mMath.vMath.vec3():h;this.type="solidrect",this.origin=g,this.verts=new Float32Array([a-g.x,l-g.y,0-g.z,-a-g.x,l-g.y,0-g.z,a-g.x,-l-g.y,0-g.z,-a-g.x,-l-g.y,0-g.z]),this._color=new Float32Array([].concat(_toConsumableArray(c.arr),_toConsumableArray(c.arr),_toConsumableArray(c.arr),_toConsumableArray(c.arr)))}return _inherits(r,t),_createClass(r,[{key:"color",get:function(){return this._color},set:function(t){t.arr?this._color=new Float32Array([].concat(_toConsumableArray(t.arr),_toConsumableArray(t.arr),_toConsumableArray(t.arr),_toConsumableArray(t.arr))):this._color=t}}]),r}(_Component4.Component),RenderableTexturedRect=function(t){function r(t){var e=void 0===arguments[1]?0:arguments[1],o=void 0===arguments[2]?0:arguments[2],n=void 0===arguments[3]?null:arguments[3],i=void 0===arguments[4]?1:arguments[4],a=void 0===arguments[5]?_vMath$color$mMath.mMath.i():arguments[5],s=void 0===arguments[6]?0:arguments[6],l=void 0===arguments[7]?0:arguments[7],u=void 0===arguments[8]?0:arguments[8];_classCallCheck(this,r),_get(Object.getPrototypeOf(r.prototype),"constructor",this).call(this,t,"renderable"),this.type="texturedrect",this.origin=_vMath$color$mMath.vMath.vec3(s,l,u),this.initialized=!1,this.gl_texture_id=-1,this.transform=a,this.sprite=n,this.verts=new Float32Array([-e-this.origin.x,-o-this.origin.y,0-this.origin.z,e-this.origin.x,-o-this.origin.y,0-this.origin.z,-e-this.origin.x,o-this.origin.y,0-this.origin.z,e-this.origin.x,o-this.origin.y,0-this.origin.z]),this.opacity=i}return _inherits(r,t),r}(_Component4.Component),RenderableSolidPoly=function(t){function r(t){for(var e=arguments.length,o=Array(e>1?e-1:0),n=1;e>n;n++)o[n-1]=arguments[n];_classCallCheck(this,r),_get(Object.getPrototypeOf(r.prototype),"constructor",this).call(this,t,"renderable");var i=o[0],a=void 0===i?[]:i,s=o[1],l=void 0===s?_vMath$color$mMath.color():s,u=o[2],c=void 0===u?_vMath$color$mMath.color():u;this.points=a,this.fill=l,this.stroke=c}return _inherits(r,t),r}(_Component4.Component);exports.RenderableSolidRect=RenderableSolidRect,exports.RenderableSolidPoly=RenderableSolidPoly,exports.RenderableTexturedRect=RenderableTexturedRect;

},{"./component.js":6,"./utils.js":25}],17:[function(require,module,exports){
"use strict";var _slicedToArray=function(e,r){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e)){var t=[],n=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(n=(i=u.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(s){o=!0,a=s}finally{try{!n&&u["return"]&&u["return"]()}finally{if(o)throw a}}return t}throw new TypeError("Invalid attempt to destructure non-iterable instance")};Object.defineProperty(exports,"__esModule",{value:!0});var _Texture=require("./texture.js");exports["default"]={__mapifyObject:function(e){var r=[];return Object.keys(e).forEach(function(t){r.push([t,e[t]])}),r},__process:function(e){var r={},t={image:this.__createTexture,json:this.__parseJSON,shader:this.__loadShader};return e.forEach(function(e){var n=_slicedToArray(e,3),o=n[0],a=n[1],i=n[2];r[i]=r[i]||{},r[i][o]=t[i](a)}),r},__createTexture:function(e){return new _Texture.Texture(e,e.width,e.height)},__parseJSON:function(e){return JSON.parse(e)},__loadShader:function(e){return e},__createTextures:function(e){var r={};return e.forEach(function(e){var t=_slicedToArray(e,2),n=t[0],o=t[1];r[n]=new _Texture.Texture(o,o.width,o.height)}),r},__loadImage:function(e){var r=_slicedToArray(e,2),t=r[0],n=r[1];return new Promise(function(e,r){var o=new Image;o.onload=function(){return e([t,o,"image"])},o.onerror=function(){return r(n)},o.src=n})},__loadJSONFile:function(e){var r=_slicedToArray(e,2),t=r[0],n=r[1];return new Promise(function(e,r){var o=new XMLHttpRequest;o.onload=function(){return e([t,o.response,"json"])},o.onerror=function(){return r(n)},o.open("GET",n,!0),o.send()})},__loadShaderFile:function(e){var r=_slicedToArray(e,2),t=r[0],n=r[1];return new Promise(function(e,r){var o=new XMLHttpRequest;o.onload=function(){return e([t,o.response,"shader"])},o.onerror=function(){return r(n)},o.open("GET",n,!0),o.send()})},__load:function(e){var r=_slicedToArray(e,2),t=r[0],n=r[1],o=n.path,a=n.type,i={image:this.__loadImage,json:this.__loadJSONFile,shader:this.__loadShaderFile};return void 0===i[a]?Promise.reject(""+[t,o]+" resource must have a type"):i[a]([t,o])},loadResources:function(e){var r=this.__mapifyObject(e);return Promise.all(r.map(this.__load.bind(this))).then(this.__process.bind(this))}},module.exports=exports["default"];

},{"./texture.js":24}],18:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var Scene=function(){function e(){var t=void 0===arguments[0]?"scene_"+Date.now().toString():arguments[0],n=void 0===arguments[1]?[]:arguments[1],r=void 0===arguments[2]?null:arguments[2];_classCallCheck(this,e),this._name=t,this._id=Symbol(this.name),this.__entities=n,this.__map=r,this.__inputstate=null}return _createClass(e,[{key:"id",get:function(){return this._id}},{key:"name",get:function(){return this._name}},{key:"map",get:function(){return this.__map}},{key:"input",get:function(){return this.__inputstate}},{key:"filter",value:regeneratorRuntime.mark(function t(e){var n,r,i,a,s,u;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:n=!0,r=!1,i=void 0,t.prev=3,a=this.entities[Symbol.iterator]();case 5:if(n=(s=a.next()).done){t.next=13;break}if(u=s.value,!e(u)){t.next=10;break}return t.next=10,u;case 10:n=!0,t.next=5;break;case 13:t.next=19;break;case 15:t.prev=15,t.t0=t["catch"](3),r=!0,i=t.t0;case 19:t.prev=19,t.prev=20,!n&&a["return"]&&a["return"]();case 22:if(t.prev=22,!r){t.next=25;break}throw i;case 25:return t.finish(22);case 26:return t.finish(19);case 27:case"end":return t.stop()}},t,this,[[3,15,19,27],[20,,22,26]])})},{key:"entities",get:function(){return this.__entities}},{key:"addEntity",value:function(e){this.__entities[e.id]=e}},{key:"removeEntity",value:function(e){delete this.__entities[e]}},{key:"all",value:function(e,t,n){var r="function"==typeof t?t:function(e){return e.has(t)},i=this.entities.filter(r);n?e.call(n,i):e(i)}},{key:"each",value:function(e,t,n){for(var r="function"==typeof t?t:function(e){return e.has(t)},i=this.filter(r),a=i.next();!a.done;)n?e.call(n,a.value):e(a.value),a=i.next()}}]),e}();exports["default"]=Scene,module.exports=exports["default"];

},{}],19:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]={vertex_source:"\n\n          attribute vec3 aVertexPosition;\n          attribute vec4 aVertexColor;\n\n          uniform mat4 uMVMatrix;\n          uniform mat4 uPMatrix;\n\n          varying lowp vec4 vColor;\n\n          void main(void) {\n            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n            vColor = aVertexColor;\n          }\n\n    ",fragment_source:"\n\n          varying lowp vec4 vColor;\n\n          void main(void) {\n            gl_FragColor = vColor;\n\n          }\n\n  ",buffers:["vertices","color"]},module.exports=exports["default"];

},{}],20:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]={vertex_source:"\n\n          attribute vec3 aVertexPosition;\n          attribute vec2 aTextureCoord;\n\n          uniform mat4 uMVMatrix;\n          uniform mat4 uPMatrix;\n\n          varying highp vec2 vTextureCoord;\n\n          void main(void) {\n            gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n            vTextureCoord = aTextureCoord;\n          }\n\n    ",fragment_source:"\n\n          varying highp vec2 vTextureCoord;\n\n          uniform sampler2D uSampler;\n          uniform highp float uAlpha;\n\n          void main(void) {\n            gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n            gl_FragColor.a *= uAlpha;\n\n          }\n\n  ",buffers:["vertices","texture"]},module.exports=exports["default"];

},{}],21:[function(require,module,exports){
"use strict";function SpriteLoader(e,r){var t={};for(var o in r)if(r.hasOwnProperty(o)){var u=r[o];if(!u.texture)return void console.error("Texture missing: "+u.texture);t[o]={};for(var i in u.sheet)if(u.sheet.hasOwnProperty(i)){var s=u.texture,a=u.sheet[i];a.frame&&(a=a.frame),t[o][i]=new _TextureRegion.TextureRegion(s,a.x,a.y,a.w,a.h)}}return t}Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=SpriteLoader;var _TextureRegion=require("./texture.js");module.exports=exports["default"];

},{"./texture.js":24}],22:[function(require,module,exports){
"use strict";var _interopRequireWildcard=function(t){return t&&t.__esModule?t:{"default":t}},_classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),_get=function t(e,n,r){var a=Object.getOwnPropertyDescriptor(e,n);if(void 0===a){var o=Object.getPrototypeOf(e);return null===o?void 0:t(o,n,r)}if("value"in a)return a.value;var i=a.get;return void 0===i?void 0:i.call(r)},_inherits=function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(t.__proto__=e)};Object.defineProperty(exports,"__esModule",{value:!0});var _GameSystem2=require("./system.js"),_GameSystem3=_interopRequireWildcard(_GameSystem2),_Component$Registry=require("./component.js"),uid=0,stateMask=function(t){var e=this;return function(n){return n.has(e.lock)&&n.get(_Component$Registry.Registry.getFlag("state"))[t]}},StateManager=function(t){function e(t,n){var r=void 0===arguments[2]?[]:arguments[2];_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,["state"].concat(r)),this.__statemachine=n}return _inherits(e,t),_createClass(e,[{key:"state",get:function(){return this.__statemachine}},{key:"_enter",value:function(t,e){t[this.state]=e}},{key:"update",value:function(t,e){var n=this,r=_Component$Registry.Registry.getFlag("state");t.each(function(e){var a=e.get(r),o=a[n.state];n[o](a,t,e)},stateMask.call(this,this.state))}}]),e}(_GameSystem3["default"]),XMotionStateManager=function(t){function e(){var t=void 0===arguments[0]?"state"+uid++:arguments[0];_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,"xmotion")}return _inherits(e,t),_createClass(e,[{key:"idle",value:function(t,e){var n=e.input.key;n.a?this._enter(t,"walkleft"):n.d&&this._enter(t,"walkright")}},{key:"walkleft",value:function(t,e){var n=e.input.key;n.a?n.d>0&&n.d>n.a&&this._enter(t,"walkright"):this._enter(t,"idle")}},{key:"walkright",value:function(t,e){var n=e.input.key;n.d?n.a>0&&n.a>n.d&&this._enter(t,"walkleft"):this._enter(t,"idle")}}]),e}(StateManager),YMotionStateManager=function(t){function e(){var t=void 0===arguments[0]?"state"+uid++:arguments[0];_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,"ymotion",["movable"])}return _inherits(e,t),_createClass(e,[{key:"ground",value:function(t,e){var n=e.input.key;n.w&&this._enter(t,"jump")}},{key:"jump",value:function(t){this._enter(t,"inair")}},{key:"inair",value:function(t,e,n){var r=_Component$Registry.Registry.getFlag("movable");n.get(r).__onground&&this._enter(t,"ground")}}]),e}(StateManager),Stateful=function(t){function e(t,n){_classCallCheck(this,e),_get(Object.getPrototypeOf(e.prototype),"constructor",this).call(this,t,"state");for(var r in n)n.hasOwnProperty(r)&&(this[r]=n[r])}return _inherits(e,t),e}(_Component$Registry.Component);exports.Stateful=Stateful,exports.XMotionStateManager=XMotionStateManager,exports.YMotionStateManager=YMotionStateManager;

},{"./component.js":6,"./system.js":23}],23:[function(require,module,exports){
"use strict";var _classCallCheck=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();Object.defineProperty(exports,"__esModule",{value:!0});var _Registry=require("./component.js"),GameSystem=function(){function e(){var t=this,n=void 0===arguments[0]?"system_"+Date.now().toString():arguments[0],r=void 0===arguments[1]?[]:arguments[1];_classCallCheck(this,e),this._name=n,this._id=Symbol(this._name),this._lock=0,this.__flags={},r.forEach(function(e){var n=_Registry.Registry.getFlag(e);t._lock|=n,t.__flags[e]=n}),this.__state={}}return _createClass(e,[{key:"id",get:function(){return this._id}},{key:"lock",get:function(){return this._lock}},{key:"state",get:function(){return this.__state}},{key:"update",value:function(e,t){}}]),e}();exports["default"]=GameSystem,module.exports=exports["default"];

},{"./component.js":6}],24:[function(require,module,exports){
"use strict";var _classCallCheck=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")},_createClass=function(){function t(t,e){for(var i=0;i<e.length;i++){var h=e[i];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(t,h.key,h)}}return function(e,i,h){return i&&t(e.prototype,i),h&&t(e,h),e}}();Object.defineProperty(exports,"__esModule",{value:!0});var Texture=function(){function t(e,i,h){_classCallCheck(this,t),this._img=e,this._width=i,this._height=h}return _createClass(t,[{key:"img",get:function(){return this._img}},{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}}]),t}(),TextureRegion=function(){function t(e,i,h,r,n){_classCallCheck(this,t),this._tex=e,this._x=i,this._y=h,this._w=r,this._h=n,this._tex_coords=new Float32Array([this.x/this.texture.width,this.y/this.texture.height,(this.x+this.width)/this.texture.width,this.y/this.texture.height,this.x/this.texture.width,(this.y+this.height)/this.texture.height,(this.x+this.width)/this.texture.width,(this.y+this.height)/this.texture.height])}return _createClass(t,[{key:"texture",get:function(){return this._tex}},{key:"x",get:function(){return this._x}},{key:"y",get:function(){return this._y}},{key:"width",get:function(){return this._w}},{key:"height",get:function(){return this._h}},{key:"coords",get:function(){return this._tex_coords}}]),t}();exports.Texture=Texture,exports.TextureRegion=TextureRegion;

},{}],25:[function(require,module,exports){
"use strict";var _slicedToArray=function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t)){var r=[],e=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(e=(u=a.next()).done)&&(r.push(u.value),!n||r.length!==n);e=!0);}catch(s){i=!0,o=s}finally{try{!e&&a["return"]&&a["return"]()}finally{if(i)throw o}}return r}throw new TypeError("Invalid attempt to destructure non-iterable instance")};Object.defineProperty(exports,"__esModule",{value:!0});var sqrt=Math.sqrt,cos=Math.cos,sin=Math.sin,tan=Math.tan,pi=Math.PI,vec2=function(){var t=void 0===arguments[0]?0:arguments[0],n=void 0===arguments[1]?0:arguments[1];return{x:t,y:n}},vec3=function(){var t=void 0===arguments[0]?0:arguments[0],n=void 0===arguments[1]?0:arguments[1],r=void 0===arguments[2]?0:arguments[2];return{x:t,y:n,z:r}},vec_ops={vec2:vec2,vec3:vec3,neg:function(t){return vec2(-t.x,-t.y)},add:function(t,n){return vec2(t.x+n.x,t.y+n.y)},mul:function(t,n){return vec2(t.x*n,t.y*n)},sub:function(t,n){return vec_ops.add(t,vec_ops.neg(n))},div:function(t,n){return vec_ops.mul(t,1/n)},magSq:function(t){return t.x*t.x+t.y*t.y},mag:function(t){return sqrt(vec_ops.magSq(t))},unit:function(t){return vec_ops.div(t,vec_ops.mag(t))},dot:function(t,n){return t.x*n.x+t.y*n.y},cross:function(t,n){return t.x*n.y-t.y*n.x},rot:function(t,n){return vec2(t.x*cos(n)-t.y*sin(n),t.x*sin(n)+t.y*cos(n))},s_proj:function(t,n){return vec_ops.dot(t,n)/vec_ops.mag(n)},v_proj:function(t,n){return vec_ops.mul(n,vec_ops.dot(t,n)/vec_ops.dot(n,n))},v_rej:function(t,n){return vec_ops.sub(t,vec_ops.v_proj(t,n))}},mtx=function(t){if(t.length){var n=function(){var n=t[0].length;return n&&t.every(function(t){return t.length===n})?{v:t.map(function(t){return t.slice()})}:void 0}();if("object"==typeof n)return n.v}return[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]]},mtx_ops={_scalarMultiplication:function(t,n){return mtx(t.map(function(t){return t.map(function(t){return t*n})}))},_matrixMultiplication:function(t,n){return mtx([[t[0][0]*n[0][0]+t[0][1]*n[1][0]+t[0][2]*n[2][0]+t[0][3]*n[3][0],t[0][0]*n[0][1]+t[0][1]*n[1][1]+t[0][2]*n[2][1]+t[0][3]*n[3][1],t[0][0]*n[0][2]+t[0][1]*n[1][2]+t[0][2]*n[2][2]+t[0][3]*n[3][2],t[0][0]*n[0][3]+t[0][1]*n[1][3]+t[0][2]*n[2][3]+t[0][3]*n[3][3]],[t[1][0]*n[0][0]+t[1][1]*n[1][0]+t[1][2]*n[2][0]+t[1][3]*n[3][0],t[1][0]*n[0][1]+t[1][1]*n[1][1]+t[1][2]*n[2][1]+t[1][3]*n[3][1],t[1][0]*n[0][2]+t[1][1]*n[1][2]+t[1][2]*n[2][2]+t[1][3]*n[3][2],t[1][0]*n[0][3]+t[1][1]*n[1][3]+t[1][2]*n[2][3]+t[1][3]*n[3][3]],[t[2][0]*n[0][0]+t[2][1]*n[1][0]+t[2][2]*n[2][0]+t[2][3]*n[3][0],t[2][0]*n[0][1]+t[2][1]*n[1][1]+t[2][2]*n[2][1]+t[2][3]*n[3][1],t[2][0]*n[0][2]+t[2][1]*n[1][2]+t[2][2]*n[2][2]+t[2][3]*n[3][2],t[2][0]*n[0][3]+t[2][1]*n[1][3]+t[2][2]*n[2][3]+t[2][3]*n[3][3]],[t[3][0]*n[0][0]+t[3][1]*n[1][0]+t[3][2]*n[2][0]+t[3][3]*n[3][0],t[3][0]*n[0][1]+t[3][1]*n[1][1]+t[3][2]*n[2][1]+t[3][3]*n[3][1],t[3][0]*n[0][2]+t[3][1]*n[1][2]+t[3][2]*n[2][2]+t[3][3]*n[3][2],t[3][0]*n[0][3]+t[3][1]*n[1][3]+t[3][2]*n[2][3]+t[3][3]*n[3][3]]])},mtx:mtx,i:function(){return mtx([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]])},mul:function(t,n){return"number"==typeof n?this._scalarMultiplication(t,n):this._matrixMultiplication(t,n)},flipx:function(){return mtx([[-1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]])},flatten:function(t){for(var n=[],r=0;r<t[0].length;r+=1)for(var e=0;e<t.length;e+=1)n.push(t[e][r]);return n},perspective:function(t,n,r,e){void 0===arguments[4]?!0:arguments[4];if(0>=t||0===n)return console.error("Error creating a perspective matrix: Division by zero (fov = "+t+", aspect = "+n),result;var i=r*tan(t*pi/360),o=-i,u=o*n,a=i*n,s=2*r/(a-u),c=2*r/(i-o),m=(a+u)/(a-u),f=(i+o)/(i-o),l=-(e+r)/(e-r),v=-2*e*r/(e-r);return mtx([[s,0,m,0],[0,c,f,0],[0,0,l,v],[0,0,-1,0]])},orthographic:function(t,n,r,e,i,o){var u=n-t,a=e-r,s=o-i,c=2/u,m=2/a,f=-2/s,l=-(t+n)/u,v=-(e+r)/a,_=-(o+i)/s;return mtx([[c,0,0,l],[0,m,0,v],[0,0,f,_],[0,0,0,1]])},translation:function(t){var n=this.i(),r=[t.x,t.y,t.z?t.z:0];return n[0][3]=r[0],n[1][3]=r[1],n[2][3]=r[2],n},scale:function(t){var n=this.i(),r=[t.x,t.y,t.z?t.z:0];return n[0][0]=r[0],n[1][1]=r[1],n[2][2]=r[2],n},rotation:function(t){var n=this.i();return n[0][0]=cos(t),n[0][1]=sin(t),n[1][0]=-sin(t),n[1][1]=cos(t),n},compose:function(){return{__mtx:mtx_ops.i(),done:function(){return this.__mtx},translate:function(t){return this.__mtx=mtx_ops.mul(this.__mtx,mtx_ops.translation(t)),this},scale:function(t){return this.__mtx=mtx_ops.mul(this.__mtx,mtx_ops.scale(t)),this},rotate:function(t){return this.__mtx=mtx_ops.mul(this.__mtx,mtx_ops.rotation(t)),this},mul:function(t){return this.__mtx=mtx_ops.mul(this.__mtx,t),this}}},print:function(t){return"\n        "+t[0][0]+" "+t[0][1]+" "+t[0][2]+" "+t[0][3]+"\n        "+t[1][0]+" "+t[1][1]+" "+t[1][2]+" "+t[1][3]+"\n        "+t[2][0]+" "+t[2][1]+" "+t[2][2]+" "+t[2][3]+"\n        "+t[3][0]+" "+t[3][1]+" "+t[3][2]+" "+t[3][3]+"\n        "}},color=function(){var t=void 0===arguments[0]?0:arguments[0],n=void 0===arguments[1]?0:arguments[1],r=void 0===arguments[2]?0:arguments[2],e=void 0===arguments[3]?1:arguments[3],i=0;if("string"==typeof t){var o=void 0;if(t.startsWith("rgba")){var u=t.match(/rgba\((\d+),(\d+),(\d+),(\d+)\)/),a=_slicedToArray(u,5);o=a[0],i=a[1],n=a[2],r=a[3],e=a[4]}else if(t.startsWith("#")){if(9===t.length){var s=t.match(/#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/),c=_slicedToArray(s,5);o=c[0],i=c[1],n=c[2],r=c[3],e=c[4]}else if(5==t.length){var m=t.match(/#([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})/),f=_slicedToArray(m,5);o=f[0],i=f[1],n=f[2],r=f[3],e=f[4],i=""+i+i,n=""+n+n,r=""+r+r,e=""+e+e}i=parseInt(i,16)/255,n=parseInt(n,16)/255,r=parseInt(r,16)/255,e=parseInt(e,16)/255}}else i=t;return Object.defineProperties({_r:i,_g:n,_b:r,_a:e,arr:[i,n,r,e],toString:function(){return"rgba("+this.r+","+this.g+","+this.b+","+this.a+")"}},{r:{get:function(){return this._r},set:function(t){this._r=t,this.arr[0]=t},configurable:!0,enumerable:!0},g:{get:function(){return this._g},set:function(t){this._g=t,this.arr[1]=t},configurable:!0,enumerable:!0},b:{get:function(){return this._b},set:function(t){this._b=t,this.arr[2]=t},configurable:!0,enumerable:!0},a:{get:function(){return this._a},set:function(t){this._a=t,this.arr[3]=t},configurable:!0,enumerable:!0}})},rAF=window.requestAnimationFrame.bind(window)||window.mozRequestAnimationFrame.bind(window)||window.webkitRequestAnimationFrame.bind(window)||window.oRequestAnimationFrame.bind(window)||function(t){return window.setTimeout.call(window,t,1e3/60)},cRAF=window.cancelAnimationFrame.bind(window)||window.mozCancelAnimationFrame.bind(window)||window.webkitCancelAnimationFrame.bind(window)||window.oCancelAnimationFrame.bind(window)||function(t){return window.clearTimeout.call(window,t)};exports.vec2=vec2,exports.vMath=vec_ops,exports.mMath=mtx_ops,exports.color=color,exports.rAF=rAF,exports.cRAF=cRAF;

},{}]},{},[1,11])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
